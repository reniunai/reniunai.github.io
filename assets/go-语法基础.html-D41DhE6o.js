import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,d as a,a as l,e,o as p}from"./app-CfDCVS1X.js";const o={},c=l("p",null,"go-语法",-1),t=e(`<h1 id="语法注意事项" tabindex="-1"><a class="header-anchor" href="#语法注意事项"><span>语法注意事项</span></a></h1><p>（1）源文件以&quot;go&quot;为扩展名。 （2）程序的执行入口是main()函数。 （3）严格区分大小写。 （4）方法由一条条语句构成，每个语句后不需要分号(Go语言会在每行后自动加分号)，这也体现出Golang的简洁性。 （5）Go编译器是一行行进行编译的，因此我们一行就写一条语句，不能把多条语句写在同一个，否则报错 （6）定义的变量或者import的包如果没有使用到，代码不能编译通过。 （7）大括号都是成对出现的，缺一不可</p><h1 id="api" tabindex="-1"><a class="header-anchor" href="#api"><span>API</span></a></h1><p>Go语言提供了大量的标准库，因此 google 公司也为这些标准库提供了相应的API文档，用于告诉开发者如何使用这些标准库，以及标准库包含的方法。官方位置：https://golang.org</p><p>Golang中文网在线标准库文档: https://studygolang.com/pkgdoc</p><figure><img src="https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407201939493.png" alt="image-20240720193943393" tabindex="0" loading="lazy"><figcaption>image-20240720193943393</figcaption></figure><p>函数对应的源码查看：</p><figure><img src="https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407201939719.png" alt="image-20240720193959648" tabindex="0" loading="lazy"><figcaption>image-20240720193959648</figcaption></figure><p>也可以使用离线API：</p><h1 id="变量定义" tabindex="-1"><a class="header-anchor" href="#变量定义"><span>变量定义</span></a></h1><p>变量的使用步骤： 1.声明 2.赋值 3.使用</p><h2 id="_1-1-声明变量" tabindex="-1"><a class="header-anchor" href="#_1-1-声明变量"><span>1.1 声明变量</span></a></h2><p>var 名称 类型 是声明单个变量的语法。</p><blockquote><p>以字母或下划线开头，由一个或多个字母、数字、下划线组成</p></blockquote><p>声明一个变量</p><p>第一种，指定变量类型，声明后若不赋值，使用默认值</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">var</span><span style="color:#D8DEE9;"> name</span><span style="color:#81A1C1;"> type</span></span>
<span class="line"><span style="color:#D8DEE9;">name</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> value</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>第二种，根据值自行判定变量类型(类型推断Type inference)</p><p>如果一个变量有一个初始值，Go将自动能够使用初始值来推断该变量的类型。因此，如果变量具有初始值，则可以省略变量声明中的类型。</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">var</span><span style="color:#D8DEE9;"> name</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> value</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>第三种，省略var, 声明并赋值，请注意此处声明了变量，所以不能对已经声明的变量再次声明。这个方式不能用于全局变量，全局变量请使用var。</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9;">name</span><span style="color:#81A1C1;"> :=</span><span style="color:#D8DEE9;"> value</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// 例如</span></span>
<span class="line"><span style="color:#81A1C1;">var</span><span style="color:#D8DEE9;"> a</span><span style="color:#81A1C1;"> int</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 10</span></span>
<span class="line"><span style="color:#81A1C1;">var</span><span style="color:#D8DEE9;"> b</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 10</span></span>
<span class="line"><span style="color:#D8DEE9;">c</span><span style="color:#ECEFF4;"> :</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 10</span></span>
<span class="line"><span style="color:#D8DEE9;">b</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 10</span><span style="color:#616E88;"> //前面已经声明了b变量，所以此处会报错。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>这种方式它只能被用在函数体内，而不可以用于全局变量的声明与赋值</p></blockquote><p>示例代码：</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">package</span><span style="color:#D8DEE9FF;"> main</span></span>
<span class="line"><span style="color:#81A1C1;">var</span><span style="color:#D8DEE9;"> a</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">Hello</span><span style="color:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="color:#81A1C1;">var</span><span style="color:#D8DEE9;"> b</span><span style="color:#81A1C1;"> string</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">World</span><span style="color:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="color:#81A1C1;">var</span><span style="color:#D8DEE9;"> c</span><span style="color:#81A1C1;"> bool</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#88C0D0;"> main</span><span style="color:#ECEFF4;">(){</span></span>
<span class="line"><span style="color:#88C0D0;">    println</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">a</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> b</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> c</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果：</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9;">Hello</span><span style="color:#D8DEE9;"> World</span><span style="color:#81A1C1;"> false</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_1-2-多变量声明" tabindex="-1"><a class="header-anchor" href="#_1-2-多变量声明"><span>1.2 多变量声明</span></a></h2><p>第一种，以逗号分隔，声明与赋值分开，若不赋值，存在默认值</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">var</span><span style="color:#D8DEE9;"> name1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> name2</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> name3</span><span style="color:#81A1C1;"> type</span></span>
<span class="line"><span style="color:#D8DEE9;">name1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> name2</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> name3</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> v1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> v2</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> v3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>第二种，直接赋值，下面的变量类型可以是不同的类型</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">var</span><span style="color:#D8DEE9;"> name1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> name2</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> name3</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> v1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> v2</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> v3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>第三种，集合类型</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">var</span><span style="color:#ECEFF4;"> (</span></span>
<span class="line"><span style="color:#D8DEE9;">    name1</span><span style="color:#D8DEE9FF;"> type1</span></span>
<span class="line"><span style="color:#D8DEE9;">    name2</span><span style="color:#D8DEE9FF;"> type2</span></span>
<span class="line"><span style="color:#ECEFF4;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_1-3-注意事项" tabindex="-1"><a class="header-anchor" href="#_1-3-注意事项"><span>1.3 注意事项</span></a></h2><ul><li>变量必须先定义才能使用</li><li>go语言是静态语言，要求变量的类型和赋值的类型必须一致。</li><li>变量名不能冲突。(同一个作用于域内不能冲突)</li><li>简短定义方式，左边的变量名至少有一个是新的</li><li>简短定义方式，不能定义全局变量。</li><li>变量的零值。也叫默认值。</li><li>变量定义了就要使用，否则无法通过编译。</li></ul><p>如果在相同的代码块中，我们不可以再次对于相同名称的变量使用初始化声明，例如：a := 20 就是不被允许的，编译器会提示错误 no new variables on left side of :=，但是 a = 20 是可以的，因为这是给相同的变量赋予一个新的值。</p><p>如果你在定义变量 a 之前使用它，则会得到编译错误 undefined: a。如果你声明了一个局部变量却没有在相同的代码块中使用它，同样会得到编译错误，例如下面这个例子当中的变量 a：</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">func</span><span style="color:#88C0D0;"> main</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">   var</span><span style="color:#D8DEE9;"> a</span><span style="color:#81A1C1;"> string</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">abc</span><span style="color:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="color:#D8DEE9;">   fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Println</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">hello, world</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>尝试编译这段代码将得到错误 a declared and not used</p><p>此外，单纯地给 a 赋值也是不够的，这个值必须被使用，所以使用</p><p>在同一个作用域中，已存在同名的变量，则之后的声明初始化，则退化为赋值操作。但这个前提是，最少要有一个新的变量被定义，且在同一作用域，例如，下面的y就是新定义的变量</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">package</span><span style="color:#D8DEE9FF;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">import</span><span style="color:#ECEFF4;"> (</span></span>
<span class="line"><span style="color:#ECEFF4;">	&quot;</span><span style="color:#A3BE8C;">fmt</span><span style="color:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="color:#ECEFF4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#88C0D0;"> main</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9;">	x</span><span style="color:#81A1C1;"> :=</span><span style="color:#B48EAD;"> 140</span></span>
<span class="line"><span style="color:#D8DEE9;">	fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Println</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">&amp;</span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9;">	x</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> y</span><span style="color:#81A1C1;"> :=</span><span style="color:#B48EAD;"> 200</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">abc</span><span style="color:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="color:#D8DEE9;">	fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Println</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">&amp;</span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> x</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9;">	fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Print</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">y</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果：</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">0x</span><span style="color:#B48EAD;">c04200a2b0</span></span>
<span class="line"><span style="color:#81A1C1;">0x</span><span style="color:#B48EAD;">c04200a2b0</span><span style="color:#B48EAD;"> 200</span></span>
<span class="line"><span style="color:#D8DEE9;">abc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="常量constant" tabindex="-1"><a class="header-anchor" href="#常量constant"><span>常量constant</span></a></h2><h3 id="_1-1-常量声明" tabindex="-1"><a class="header-anchor" href="#_1-1-常量声明"><span>1.1 常量声明</span></a></h3><p>常量是一个简单值的标识符，在程序运行时，不会被修改的量。</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> identifier</span><span style="color:#ECEFF4;"> [</span><span style="color:#81A1C1;">type</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> value</span></span>
<span class="line"><span style="color:#D8DEE9;">显式类型定义</span><span style="color:#D8DEE9FF;">： </span><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> b</span><span style="color:#81A1C1;"> string</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">abc</span><span style="color:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="color:#D8DEE9;">隐式类型定义</span><span style="color:#D8DEE9FF;">： </span><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> b</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">abc</span><span style="color:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="color:#81A1C1;">package</span><span style="color:#D8DEE9FF;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">import</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">fmt</span><span style="color:#ECEFF4;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#88C0D0;"> main</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">   const</span><span style="color:#D8DEE9;"> LENGTH</span><span style="color:#81A1C1;"> int</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 10</span></span>
<span class="line"><span style="color:#81A1C1;">   const</span><span style="color:#D8DEE9;"> WIDTH</span><span style="color:#81A1C1;"> int</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 5</span><span style="color:#D8DEE9FF;">   </span></span>
<span class="line"><span style="color:#81A1C1;">   var</span><span style="color:#D8DEE9;"> area</span><span style="color:#81A1C1;"> int</span></span>
<span class="line"><span style="color:#81A1C1;">   const</span><span style="color:#D8DEE9;"> a</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> b</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> c</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 1</span><span style="color:#ECEFF4;">,</span><span style="color:#81A1C1;"> false</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">str</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#616E88;"> //多重赋值</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9;">   area</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> LENGTH</span><span style="color:#81A1C1;"> *</span><span style="color:#D8DEE9;"> WIDTH</span></span>
<span class="line"><span style="color:#D8DEE9;">   fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">面积为 : </span><span style="color:#EBCB8B;">%d</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> area</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#88C0D0;">   println</span><span style="color:#ECEFF4;">()</span></span>
<span class="line"><span style="color:#88C0D0;">   println</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">a</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> b</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> c</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;">   </span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果：</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9;">面积为</span><span style="color:#ECEFF4;"> :</span><span style="color:#B48EAD;"> 50</span></span>
<span class="line"><span style="color:#B48EAD;">1</span><span style="color:#81A1C1;"> false</span><span style="color:#D8DEE9;"> str</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>常量可以作为枚举，常量组</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">const</span><span style="color:#ECEFF4;"> (</span></span>
<span class="line"><span style="color:#D8DEE9;">    Unknown</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 0</span></span>
<span class="line"><span style="color:#D8DEE9;">    Female</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 1</span></span>
<span class="line"><span style="color:#D8DEE9;">    Male</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 2</span></span>
<span class="line"><span style="color:#ECEFF4;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>常量组中如不指定类型和初始化值，则与上一行非空常量右值相同</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">package</span><span style="color:#D8DEE9FF;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">import</span><span style="color:#ECEFF4;"> (</span></span>
<span class="line"><span style="color:#ECEFF4;">	&quot;</span><span style="color:#A3BE8C;">fmt</span><span style="color:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="color:#ECEFF4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#88C0D0;"> main</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">	const</span><span style="color:#ECEFF4;"> (</span></span>
<span class="line"><span style="color:#D8DEE9;">		x</span><span style="color:#81A1C1;"> uint16</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 16</span></span>
<span class="line"><span style="color:#D8DEE9;">		y</span></span>
<span class="line"><span style="color:#D8DEE9;">		s</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">abc</span><span style="color:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="color:#D8DEE9;">		z</span></span>
<span class="line"><span style="color:#ECEFF4;">	)</span></span>
<span class="line"><span style="color:#D8DEE9;">	fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#EBCB8B;">%T</span><span style="color:#A3BE8C;">,</span><span style="color:#EBCB8B;">%v\\n</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> y</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> y</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9;">	fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#EBCB8B;">%T</span><span style="color:#A3BE8C;">,</span><span style="color:#EBCB8B;">%v\\n</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> z</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> z</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果：</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">uint16</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;">16</span></span>
<span class="line"><span style="color:#81A1C1;">string</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;">abc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>常量的注意事项：</p><ul><li>常量中的数据类型只可以是布尔型、数字型（整数型、浮点型和复数）和字符串型</li><li>不曾使用的常量，在编译的时候，是不会报错的</li><li>显示指定类型的时候，必须确保常量左右值类型一致，需要时可做显示类型转换。这与变量就不一样了，变量是可以是不同的类型值</li></ul><h3 id="_1-2-iota" tabindex="-1"><a class="header-anchor" href="#_1-2-iota"><span>1.2 iota</span></a></h3><p>iota，特殊常量，可以认为是一个可以被编译器修改的常量</p><p>iota 可以被用作枚举值：</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">const</span><span style="color:#ECEFF4;"> (</span></span>
<span class="line"><span style="color:#D8DEE9;">    a</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> iota</span></span>
<span class="line"><span style="color:#D8DEE9;">    b</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> iota</span></span>
<span class="line"><span style="color:#D8DEE9;">    c</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> iota</span></span>
<span class="line"><span style="color:#ECEFF4;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第一个 iota 等于 0，每当 iota 在新的一行被使用时，它的值都会自动加 1；所以 a=0, b=1, c=2 可以简写为如下形式：</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">const</span><span style="color:#ECEFF4;"> (</span></span>
<span class="line"><span style="color:#D8DEE9;">    a</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> iota</span></span>
<span class="line"><span style="color:#D8DEE9;">    b</span></span>
<span class="line"><span style="color:#D8DEE9;">    c</span></span>
<span class="line"><span style="color:#ECEFF4;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>iota 用法</strong></p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">package</span><span style="color:#D8DEE9FF;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">import</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">fmt</span><span style="color:#ECEFF4;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#88C0D0;"> main</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">    const</span><span style="color:#ECEFF4;"> (</span></span>
<span class="line"><span style="color:#D8DEE9;">            a</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> iota</span><span style="color:#616E88;">   //0</span></span>
<span class="line"><span style="color:#D8DEE9;">            b</span><span style="color:#616E88;">          //1</span></span>
<span class="line"><span style="color:#D8DEE9;">            c</span><span style="color:#616E88;">          //2</span></span>
<span class="line"><span style="color:#D8DEE9;">            d</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">ha</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#616E88;">   //独立值，iota += 1</span></span>
<span class="line"><span style="color:#D8DEE9;">            e</span><span style="color:#616E88;">          //&quot;ha&quot;   iota += 1</span></span>
<span class="line"><span style="color:#D8DEE9;">            f</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 100</span><span style="color:#616E88;">    //iota +=1</span></span>
<span class="line"><span style="color:#D8DEE9;">            g</span><span style="color:#616E88;">          //100  iota +=1</span></span>
<span class="line"><span style="color:#D8DEE9;">            h</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> iota</span><span style="color:#616E88;">   //7,恢复计数</span></span>
<span class="line"><span style="color:#D8DEE9;">            i</span><span style="color:#616E88;">          //8</span></span>
<span class="line"><span style="color:#ECEFF4;">    )</span></span>
<span class="line"><span style="color:#D8DEE9;">    fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Println</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">a</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;">b</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;">c</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;">d</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;">e</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;">f</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;">g</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;">h</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;">i</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>0 1 2 ha ha 100 100 7 8</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果中断iota自增，则必须显式恢复。且后续自增值按行序递增</p><p>自增默认是int类型，可以自行进行显示指定类型</p><p>数字常量不会分配存储空间，无须像变量那样通过内存寻址来取值，因此无法获取地址</p><h1 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型"><span>数据类型</span></a></h1><figure><img src="https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407202059193.png" alt="image-20240720205940115" tabindex="0" loading="lazy"><figcaption>image-20240720205940115</figcaption></figure><p>整数类型</p><p>浮点类型</p><p>字符类型</p><p>布尔类型</p><p>字符串类型</p><p>基本数据类型的默认值</p><p>基本数据类型之间的转换</p><p>基本数据类型转为String</p><p>string转为基本数据类型</p><h1 id="运算符" tabindex="-1"><a class="header-anchor" href="#运算符"><span>运算符</span></a></h1><h1 id="流程控制" tabindex="-1"><a class="header-anchor" href="#流程控制"><span>流程控制</span></a></h1><p>程序的流程控制结构一共有三种：顺序结构，选择结构，循环结构。</p><p>顺序结构：从上向下，逐行执行。</p><p>选择结构：条件满足，某些代码才会执行。0-1次</p><p>分支语句：if，switch，select</p><p>循环结构：条件满足，某些代码会被反复的执行多次。0-N次</p><p>循环语句：for</p><h1 id="二、条件语句" tabindex="-1"><a class="header-anchor" href="#二、条件语句"><span>二、条件语句</span></a></h1><h2 id="_2-1-if-语句" tabindex="-1"><a class="header-anchor" href="#_2-1-if-语句"><span>2.1 if 语句</span></a></h2><p>语法格式：</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9;"> 布尔表达式</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">   /* 在布尔表达式为 true 时执行 */</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9;"> 布尔表达式</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">   /* 在布尔表达式为 true 时执行 */</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;"> else</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">  /* 在布尔表达式为 false 时执行 */</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9;"> 布尔表达式1</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">   /* 在布尔表达式1为 true 时执行 */</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;"> else</span><span style="color:#81A1C1;"> if</span><span style="color:#D8DEE9;"> 布尔表达式2</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#616E88;">   /* 在布尔表达式1为 false ,布尔表达式2为true时执行 */</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;"> else</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#616E88;">   /* 在上面两个布尔表达式都为false时，执行*/</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例代码：</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">package</span><span style="color:#D8DEE9FF;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">import</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">fmt</span><span style="color:#ECEFF4;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#88C0D0;"> main</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">   /* 定义局部变量 */</span></span>
<span class="line"><span style="color:#81A1C1;">   var</span><span style="color:#D8DEE9;"> a</span><span style="color:#81A1C1;"> int</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 10</span></span>
<span class="line"><span style="color:#D8DEE9FF;"> </span></span>
<span class="line"><span style="color:#616E88;">   /* 使用 if 语句判断布尔表达式 */</span></span>
<span class="line"><span style="color:#81A1C1;">   if</span><span style="color:#D8DEE9;"> a</span><span style="color:#81A1C1;"> &lt;</span><span style="color:#B48EAD;"> 20</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">       /* 如果条件为 true 则执行以下语句 */</span></span>
<span class="line"><span style="color:#D8DEE9;">       fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">a 小于 20</span><span style="color:#EBCB8B;">\\n</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;"> )</span></span>
<span class="line"><span style="color:#ECEFF4;">   }</span></span>
<span class="line"><span style="color:#D8DEE9;">   fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">a 的值为 : </span><span style="color:#EBCB8B;">%d\\n</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> a</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-2-if-变体" tabindex="-1"><a class="header-anchor" href="#_2-2-if-变体"><span>2.2 if 变体</span></a></h2><p>如果其中包含一个可选的语句组件(在评估条件之前执行)，则还有一个变体。它的语法是</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9;"> statement</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9;"> condition</span><span style="color:#ECEFF4;"> {</span><span style="color:#D8DEE9FF;">  </span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9;"> condition</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例代码：</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">package</span><span style="color:#D8DEE9FF;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">import</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9FF;">  </span></span>
<span class="line"><span style="color:#ECEFF4;">    &quot;</span><span style="color:#A3BE8C;">fmt</span><span style="color:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="color:#ECEFF4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#88C0D0;"> main</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span><span style="color:#D8DEE9FF;">  </span></span>
<span class="line"><span style="color:#81A1C1;">    if</span><span style="color:#D8DEE9;"> num</span><span style="color:#81A1C1;"> :=</span><span style="color:#B48EAD;"> 10</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9;"> num</span><span style="color:#81A1C1;"> %</span><span style="color:#B48EAD;"> 2</span><span style="color:#81A1C1;"> ==</span><span style="color:#B48EAD;"> 0</span><span style="color:#ECEFF4;"> {</span><span style="color:#616E88;"> //checks if number is even</span></span>
<span class="line"><span style="color:#D8DEE9;">        fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Println</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">num</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">is even</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span></span>
<span class="line"><span style="color:#ECEFF4;">    }</span><span style="color:#81A1C1;">  else</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9;">        fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Println</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">num</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">is odd</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">    }</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>需要注意的是，num的定义在if里，那么只能够在该if..else语句块中使用，否则编译器会报错的。</p></blockquote><h2 id="_2-3-switch语句-开关" tabindex="-1"><a class="header-anchor" href="#_2-3-switch语句-开关"><span>2.3 switch语句：“开关”</span></a></h2><p>switch是一个条件语句，它计算表达式并将其与可能匹配的列表进行比较，并根据匹配执行代码块。它可以被认为是一种惯用的方式来写多个if else子句。</p><p>switch 语句用于基于不同条件执行不同动作，每一个 case 分支都是唯一的，从上直下逐一测试，直到匹配为止。 switch 语句执行的过程从上至下，直到找到匹配项，匹配项后面也不需要再加break。</p><p>而如果switch没有表达式，它会匹配true</p><p>Go里面switch默认相当于每个case最后带有break，匹配成功后不会自动向下执行其他case，而是跳出整个switch, 但是可以使用fallthrough强制执行后面的case代码。</p><p>变量 var1 可以是任何类型，而 val1 和 val2 则可以是同类型的任意值。类型不被局限于常量或整数，但必须是相同的类型；或者最终结果为相同类型的表达式。 您可以<strong>同时测试多个可能符合条件的值，使用逗号分割它们</strong>，例如：case val1, val2, val3。</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">switch</span><span style="color:#D8DEE9;"> var1</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">    case</span><span style="color:#D8DEE9;"> val1</span><span style="color:#ECEFF4;">:</span></span>
<span class="line"><span style="color:#81A1C1;">        ...</span></span>
<span class="line"><span style="color:#81A1C1;">    case</span><span style="color:#D8DEE9;"> val2</span><span style="color:#ECEFF4;">:</span></span>
<span class="line"><span style="color:#81A1C1;">        ...</span></span>
<span class="line"><span style="color:#81A1C1;">    default</span><span style="color:#ECEFF4;">:</span></span>
<span class="line"><span style="color:#81A1C1;">        ...</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例代码：</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">package</span><span style="color:#D8DEE9FF;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">import</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">fmt</span><span style="color:#ECEFF4;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#88C0D0;"> main</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">   /* 定义局部变量 */</span></span>
<span class="line"><span style="color:#81A1C1;">   var</span><span style="color:#D8DEE9;"> grade</span><span style="color:#81A1C1;"> string</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">B</span><span style="color:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="color:#81A1C1;">   var</span><span style="color:#D8DEE9;"> marks</span><span style="color:#81A1C1;"> int</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 90</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">   switch</span><span style="color:#D8DEE9;"> marks</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">      case</span><span style="color:#B48EAD;"> 90</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9;"> grade</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">A</span><span style="color:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="color:#81A1C1;">      case</span><span style="color:#B48EAD;"> 80</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9;"> grade</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">B</span><span style="color:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="color:#81A1C1;">      case</span><span style="color:#B48EAD;"> 50</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;">60</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;">70</span><span style="color:#ECEFF4;"> :</span><span style="color:#D8DEE9;"> grade</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">C</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#616E88;">  //case 后可以由多个数值</span></span>
<span class="line"><span style="color:#81A1C1;">      default</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9;"> grade</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">D</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">  </span></span>
<span class="line"><span style="color:#ECEFF4;">   }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">   switch</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">      case</span><span style="color:#D8DEE9;"> grade</span><span style="color:#81A1C1;"> ==</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">A</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;"> :</span></span>
<span class="line"><span style="color:#D8DEE9;">         fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">优秀!</span><span style="color:#EBCB8B;">\\n</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;"> )</span><span style="color:#D8DEE9FF;">     </span></span>
<span class="line"><span style="color:#81A1C1;">      case</span><span style="color:#D8DEE9;"> grade</span><span style="color:#81A1C1;"> ==</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">B</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> grade</span><span style="color:#81A1C1;"> ==</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">C</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;"> :</span></span>
<span class="line"><span style="color:#D8DEE9;">         fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">良好</span><span style="color:#EBCB8B;">\\n</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;"> )</span><span style="color:#D8DEE9FF;">      </span></span>
<span class="line"><span style="color:#81A1C1;">      case</span><span style="color:#D8DEE9;"> grade</span><span style="color:#81A1C1;"> ==</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">D</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;"> :</span></span>
<span class="line"><span style="color:#D8DEE9;">         fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">及格</span><span style="color:#EBCB8B;">\\n</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;"> )</span><span style="color:#D8DEE9FF;">      </span></span>
<span class="line"><span style="color:#81A1C1;">      case</span><span style="color:#D8DEE9;"> grade</span><span style="color:#81A1C1;"> ==</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">F</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">:</span></span>
<span class="line"><span style="color:#D8DEE9;">         fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">不及格</span><span style="color:#EBCB8B;">\\n</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;"> )</span></span>
<span class="line"><span style="color:#81A1C1;">      default</span><span style="color:#ECEFF4;">:</span></span>
<span class="line"><span style="color:#D8DEE9;">         fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">差</span><span style="color:#EBCB8B;">\\n</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;"> )</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">   }</span></span>
<span class="line"><span style="color:#D8DEE9;">   fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">你的等级是 </span><span style="color:#EBCB8B;">%s\\n</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> grade</span><span style="color:#ECEFF4;"> )</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;">      </span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-4-fallthrough" tabindex="-1"><a class="header-anchor" href="#_2-4-fallthrough"><span>2.4 fallthrough</span></a></h2><p>如需贯通后续的case，就添加fallthrough</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">package</span><span style="color:#D8DEE9FF;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">import</span><span style="color:#ECEFF4;"> (</span></span>
<span class="line"><span style="color:#ECEFF4;">	&quot;</span><span style="color:#A3BE8C;">fmt</span><span style="color:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="color:#ECEFF4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">type</span><span style="color:#D8DEE9FF;"> data </span><span style="color:#ECEFF4;">[</span><span style="color:#B48EAD;">2</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;">int</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#88C0D0;"> main</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">	switch</span><span style="color:#D8DEE9;"> x</span><span style="color:#81A1C1;"> :=</span><span style="color:#B48EAD;"> 5</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9;"> x</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">	default</span><span style="color:#ECEFF4;">:</span></span>
<span class="line"><span style="color:#D8DEE9;">		fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Println</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#81A1C1;">	case</span><span style="color:#B48EAD;"> 5</span><span style="color:#ECEFF4;">:</span></span>
<span class="line"><span style="color:#D8DEE9;">		x</span><span style="color:#81A1C1;"> +=</span><span style="color:#B48EAD;"> 10</span></span>
<span class="line"><span style="color:#D8DEE9;">		fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Println</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#81A1C1;">		fallthrough</span></span>
<span class="line"><span style="color:#81A1C1;">	case</span><span style="color:#B48EAD;"> 6</span><span style="color:#ECEFF4;">:</span></span>
<span class="line"><span style="color:#D8DEE9;">		x</span><span style="color:#81A1C1;"> +=</span><span style="color:#B48EAD;"> 20</span></span>
<span class="line"><span style="color:#D8DEE9;">		fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Println</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ECEFF4;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果：</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#B48EAD;">15</span></span>
<span class="line"><span style="color:#B48EAD;">35</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>case中的表达式是可选的，可以省略。如果该表达式被省略，则被认为是switch true，并且每个case表达式都被计算为true，并执行相应的代码块。</p><p>示例代码：</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">package</span><span style="color:#D8DEE9FF;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">import</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9FF;">  </span></span>
<span class="line"><span style="color:#ECEFF4;">    &quot;</span><span style="color:#A3BE8C;">fmt</span><span style="color:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="color:#ECEFF4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#88C0D0;"> main</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span><span style="color:#D8DEE9FF;">  </span></span>
<span class="line"><span style="color:#D8DEE9;">    num</span><span style="color:#81A1C1;"> :=</span><span style="color:#B48EAD;"> 75</span></span>
<span class="line"><span style="color:#81A1C1;">    switch</span><span style="color:#ECEFF4;"> {</span><span style="color:#616E88;"> // expression is omitted</span></span>
<span class="line"><span style="color:#81A1C1;">    case</span><span style="color:#D8DEE9;"> num</span><span style="color:#81A1C1;"> &gt;=</span><span style="color:#B48EAD;"> 0</span><span style="color:#81A1C1;"> &amp;&amp;</span><span style="color:#D8DEE9;"> num</span><span style="color:#81A1C1;"> &lt;=</span><span style="color:#B48EAD;"> 50</span><span style="color:#ECEFF4;">:</span></span>
<span class="line"><span style="color:#D8DEE9;">        fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Println</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">num is greater than 0 and less than 50</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#81A1C1;">    case</span><span style="color:#D8DEE9;"> num</span><span style="color:#81A1C1;"> &gt;=</span><span style="color:#B48EAD;"> 51</span><span style="color:#81A1C1;"> &amp;&amp;</span><span style="color:#D8DEE9;"> num</span><span style="color:#81A1C1;"> &lt;=</span><span style="color:#B48EAD;"> 100</span><span style="color:#ECEFF4;">:</span></span>
<span class="line"><span style="color:#D8DEE9;">        fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Println</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">num is greater than 51 and less than 100</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#81A1C1;">    case</span><span style="color:#D8DEE9;"> num</span><span style="color:#81A1C1;"> &gt;=</span><span style="color:#B48EAD;"> 101</span><span style="color:#ECEFF4;">:</span></span>
<span class="line"><span style="color:#D8DEE9;">        fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Println</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">num is greater than 100</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>switch的注意事项</p><ol><li>case后的常量值不能重复</li><li>case后可以有多个常量值</li><li>fallthrough应该是某个case的最后一行。如果它出现在中间的某个地方，编译器就会抛出错误。</li></ol></blockquote><h2 id="_2-5-type-switch" tabindex="-1"><a class="header-anchor" href="#_2-5-type-switch"><span>2.5 Type Switch</span></a></h2><p>switch 语句还可以被用于 type-switch 来判断某个 interface 变量中实际存储的变量类型。</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">switch</span><span style="color:#D8DEE9;"> x</span><span style="color:#ECEFF4;">.(</span><span style="color:#81A1C1;">type</span><span style="color:#ECEFF4;">){</span></span>
<span class="line"><span style="color:#81A1C1;">    case</span><span style="color:#81A1C1;"> type</span><span style="color:#ECEFF4;">:</span></span>
<span class="line"><span style="color:#88C0D0;">       statement</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">s</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;">      </span></span>
<span class="line"><span style="color:#81A1C1;">    case</span><span style="color:#81A1C1;"> type</span><span style="color:#ECEFF4;">:</span></span>
<span class="line"><span style="color:#88C0D0;">       statement</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">s</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> </span></span>
<span class="line"><span style="color:#616E88;">    /* 你可以定义任意个数的case */</span></span>
<span class="line"><span style="color:#81A1C1;">    default</span><span style="color:#ECEFF4;">:</span><span style="color:#616E88;"> /* 可选 */</span></span>
<span class="line"><span style="color:#88C0D0;">       statement</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">s</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"><span style="color:#81A1C1;">package</span><span style="color:#D8DEE9FF;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">import</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">fmt</span><span style="color:#ECEFF4;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#88C0D0;"> main</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">   var</span><span style="color:#D8DEE9;"> x</span><span style="color:#81A1C1;"> interface</span><span style="color:#ECEFF4;">{}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">     </span></span>
<span class="line"><span style="color:#81A1C1;">   switch</span><span style="color:#D8DEE9;"> i</span><span style="color:#81A1C1;"> :=</span><span style="color:#D8DEE9;"> x</span><span style="color:#ECEFF4;">.(</span><span style="color:#81A1C1;">type</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">      case</span><span style="color:#81A1C1;"> nil</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;">	  </span></span>
<span class="line"><span style="color:#D8DEE9;">         fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;"> x 的类型 :</span><span style="color:#EBCB8B;">%T</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;">i</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;">                </span></span>
<span class="line"><span style="color:#81A1C1;">      case</span><span style="color:#81A1C1;"> int</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;">	  </span></span>
<span class="line"><span style="color:#D8DEE9;">         fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">x 是 int 型</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;">                       </span></span>
<span class="line"><span style="color:#81A1C1;">      case</span><span style="color:#81A1C1;"> float64</span><span style="color:#ECEFF4;">:</span></span>
<span class="line"><span style="color:#D8DEE9;">         fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">x 是 float64 型</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;">           </span></span>
<span class="line"><span style="color:#81A1C1;">      case</span><span style="color:#81A1C1;"> func</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">int</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> float64</span><span style="color:#ECEFF4;">:</span></span>
<span class="line"><span style="color:#D8DEE9;">         fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">x 是 func(int) 型</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;">                      </span></span>
<span class="line"><span style="color:#81A1C1;">      case</span><span style="color:#81A1C1;"> bool</span><span style="color:#ECEFF4;">,</span><span style="color:#81A1C1;"> string</span><span style="color:#ECEFF4;">:</span></span>
<span class="line"><span style="color:#D8DEE9;">         fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">x 是 bool 或 string 型</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;"> )</span><span style="color:#D8DEE9FF;">       </span></span>
<span class="line"><span style="color:#81A1C1;">      default</span><span style="color:#ECEFF4;">:</span></span>
<span class="line"><span style="color:#D8DEE9;">         fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">未知型</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;">     </span></span>
<span class="line"><span style="color:#ECEFF4;">   }</span><span style="color:#D8DEE9FF;">   </span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果：</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9;">x</span><span style="color:#D8DEE9;"> 的类型</span><span style="color:#ECEFF4;"> :</span><span style="color:#81A1C1;">&lt;nil&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h1 id="函数" tabindex="-1"><a class="header-anchor" href="#函数"><span>函数</span></a></h1><h1 id="错误处理" tabindex="-1"><a class="header-anchor" href="#错误处理"><span>错误处理</span></a></h1><h1 id="数组" tabindex="-1"><a class="header-anchor" href="#数组"><span>数组</span></a></h1><h1 id="切片" tabindex="-1"><a class="header-anchor" href="#切片"><span>切片</span></a></h1><h1 id="映射" tabindex="-1"><a class="header-anchor" href="#映射"><span>映射</span></a></h1><h1 id="面向对象" tabindex="-1"><a class="header-anchor" href="#面向对象"><span>面向对象</span></a></h1><h1 id="键盘输入输出" tabindex="-1"><a class="header-anchor" href="#键盘输入输出"><span>键盘输入输出</span></a></h1><h2 id="一、打印输出" tabindex="-1"><a class="header-anchor" href="#一、打印输出"><span>一、打印输出</span></a></h2><h3 id="_1-1-fmt包" tabindex="-1"><a class="header-anchor" href="#_1-1-fmt包"><span>1.1 fmt包</span></a></h3><p>fmt包实现了类似C语言printf和scanf的格式化I/O。格式化verb（&#39;verb&#39;）源自C语言但更简单。</p><p>详见官网fmt的API：https://golang.google.cn/pkg/fmt/</p><figure><img src="https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407202108620.png" alt="image-20240720210834530" tabindex="0" loading="lazy"><figcaption>image-20240720210834530</figcaption></figure><h3 id="_1-2-导入包" tabindex="-1"><a class="header-anchor" href="#_1-2-导入包"><span>1.2 导入包</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">import</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">fmt</span><span style="color:#ECEFF4;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_1-3-常用打印函数" tabindex="-1"><a class="header-anchor" href="#_1-3-常用打印函数"><span>1.3 常用打印函数</span></a></h3><p><strong>打印：</strong></p><p><a href="https://golang.google.cn/pkg/fmt/#Print" target="_blank" rel="noopener noreferrer">func Print(a ...interface{}) (n int, err error)</a></p><p><strong>格式化打印：</strong></p><p><a href="https://golang.google.cn/pkg/fmt/#Printf" target="_blank" rel="noopener noreferrer">func Printf(format string, a ...interface{}) (n int, err error)</a></p><p><strong>打印后换行</strong></p><p><a href="https://golang.google.cn/pkg/fmt/#Println" target="_blank" rel="noopener noreferrer">func Println(a ...interface{}) (n int, err error)</a></p><p>格式化打印中的常用占位符：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>格式化打印占位符：</span></span>
<span class="line"><span>			%v,原样输出</span></span>
<span class="line"><span>			%T，打印类型</span></span>
<span class="line"><span>			%t,bool类型</span></span>
<span class="line"><span>			%s，字符串</span></span>
<span class="line"><span>			%f，浮点</span></span>
<span class="line"><span>			%d，10进制的整数</span></span>
<span class="line"><span>			%b，2进制的整数</span></span>
<span class="line"><span>			%o，8进制</span></span>
<span class="line"><span>			%x，%X，16进制</span></span>
<span class="line"><span>				%x：0-9，a-f</span></span>
<span class="line"><span>				%X：0-9，A-F</span></span>
<span class="line"><span>			%c，打印字符</span></span>
<span class="line"><span>			%p，打印地址</span></span>
<span class="line"><span>			。。。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例代码：</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">package</span><span style="color:#D8DEE9FF;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">import</span><span style="color:#ECEFF4;"> (</span></span>
<span class="line"><span style="color:#ECEFF4;">	&quot;</span><span style="color:#A3BE8C;">fmt</span><span style="color:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="color:#ECEFF4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#88C0D0;"> main</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9;">	a</span><span style="color:#81A1C1;"> :=</span><span style="color:#B48EAD;"> 100</span><span style="color:#616E88;">           //int</span></span>
<span class="line"><span style="color:#D8DEE9;">	b</span><span style="color:#81A1C1;"> :=</span><span style="color:#B48EAD;"> 3.14</span><span style="color:#616E88;">          //float64</span></span>
<span class="line"><span style="color:#D8DEE9;">	c</span><span style="color:#81A1C1;"> :=</span><span style="color:#81A1C1;"> true</span><span style="color:#616E88;">          // bool</span></span>
<span class="line"><span style="color:#D8DEE9;">	d</span><span style="color:#81A1C1;"> :=</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">Hello World</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#616E88;"> //string</span></span>
<span class="line"><span style="color:#D8DEE9;">	e</span><span style="color:#81A1C1;"> :=</span><span style="color:#ECEFF4;"> \`</span><span style="color:#A3BE8C;">Ruby</span><span style="color:#ECEFF4;">\`</span><span style="color:#616E88;">        //string</span></span>
<span class="line"><span style="color:#D8DEE9;">	f</span><span style="color:#81A1C1;"> :=</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">A</span><span style="color:#ECEFF4;">&#39;</span></span>
<span class="line"><span style="color:#D8DEE9;">	fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#EBCB8B;">%T</span><span style="color:#A3BE8C;">,</span><span style="color:#EBCB8B;">%b\\n</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> a</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> a</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9;">	fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#EBCB8B;">%T</span><span style="color:#A3BE8C;">,</span><span style="color:#EBCB8B;">%f\\n</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> b</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> b</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9;">	fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#EBCB8B;">%T</span><span style="color:#A3BE8C;">,</span><span style="color:#EBCB8B;">%t\\n</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> c</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> c</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9;">	fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#EBCB8B;">%T</span><span style="color:#A3BE8C;">,</span><span style="color:#EBCB8B;">%s\\n</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> d</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> d</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9;">	fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#EBCB8B;">%T</span><span style="color:#A3BE8C;">,</span><span style="color:#EBCB8B;">%s\\n</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> e</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> e</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9;">	fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#EBCB8B;">%T</span><span style="color:#A3BE8C;">,</span><span style="color:#EBCB8B;">%d</span><span style="color:#A3BE8C;">,</span><span style="color:#EBCB8B;">%c\\n</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> f</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> f</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> f</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9;">	fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Println</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">-----------------------</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9;">	fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#EBCB8B;">%v\\n</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> a</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9;">	fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#EBCB8B;">%v\\n</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> b</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9;">	fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#EBCB8B;">%v\\n</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> c</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9;">	fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#EBCB8B;">%v\\n</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> d</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9;">	fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#EBCB8B;">%v\\n</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> e</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9;">	fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#EBCB8B;">%v\\n</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> f</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果：</p><figure><img src="https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407202109136.png" alt="image-20240720210909087" tabindex="0" loading="lazy"><figcaption>image-20240720210909087</figcaption></figure><h2 id="二、键盘输入" tabindex="-1"><a class="header-anchor" href="#二、键盘输入"><span>二、键盘输入</span></a></h2><h3 id="_2-1-fmt包读取键盘输入" tabindex="-1"><a class="header-anchor" href="#_2-1-fmt包读取键盘输入"><span>2.1 fmt包读取键盘输入</span></a></h3><p>常用方法：</p><p><a href="https://golang.google.cn/pkg/fmt/#Scan" target="_blank" rel="noopener noreferrer">func Scan(a ...interface{}) (n int, err error)</a></p><p><a href="https://golang.google.cn/pkg/fmt/#Scanf" target="_blank" rel="noopener noreferrer">func Scanf(format string, a ...interface{}) (n int, err error)</a></p><p><a href="https://golang.google.cn/pkg/fmt/#Scanln" target="_blank" rel="noopener noreferrer">func Scanln(a ...interface{}) (n int, err error)</a></p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">package</span><span style="color:#D8DEE9FF;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">import</span><span style="color:#ECEFF4;"> (</span></span>
<span class="line"><span style="color:#ECEFF4;">	&quot;</span><span style="color:#A3BE8C;">fmt</span><span style="color:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="color:#ECEFF4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#88C0D0;"> main</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">	var</span><span style="color:#D8DEE9;"> x</span><span style="color:#81A1C1;"> int</span></span>
<span class="line"><span style="color:#81A1C1;">	var</span><span style="color:#D8DEE9;"> y</span><span style="color:#81A1C1;"> float64</span></span>
<span class="line"><span style="color:#D8DEE9;">	fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Println</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">请输入一个整数，一个浮点类型：</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9;">	fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Scanln</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">&amp;</span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">,</span><span style="color:#81A1C1;">&amp;</span><span style="color:#D8DEE9;">y</span><span style="color:#ECEFF4;">)</span><span style="color:#616E88;">//读取键盘的输入，通过操作地址，赋值给x和y   阻塞式</span></span>
<span class="line"><span style="color:#D8DEE9;">	fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">x的数值：</span><span style="color:#EBCB8B;">%d</span><span style="color:#A3BE8C;">，y的数值：</span><span style="color:#EBCB8B;">%f\\n</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;">y</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9;">	fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Scanf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#EBCB8B;">%d</span><span style="color:#A3BE8C;">,</span><span style="color:#EBCB8B;">%f</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#81A1C1;">&amp;</span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">,</span><span style="color:#81A1C1;">&amp;</span><span style="color:#D8DEE9;">y</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9;">	fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Printf</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">x:</span><span style="color:#EBCB8B;">%d</span><span style="color:#A3BE8C;">,y:</span><span style="color:#EBCB8B;">%f\\n</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;">y</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果：</p><figure><img src="https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407202109140.png" alt="image-20240720210930091" tabindex="0" loading="lazy"><figcaption>image-20240720210930091</figcaption></figure><h3 id="_2-2-bufio包读取" tabindex="-1"><a class="header-anchor" href="#_2-2-bufio包读取"><span>2.2 bufio包读取</span></a></h3><p>https://golang.google.cn/pkg/bufio/</p><p>bufio包中都是IO操作的方法：</p><p>先创建Reader对象：</p><figure><img src="https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407202109787.png" alt="image-20240720210942710" tabindex="0" loading="lazy"><figcaption>image-20240720210942710</figcaption></figure><p>然后就可以各种读取了：</p><figure><img src="https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407202110189.png" alt="image-20240720211002113" tabindex="0" loading="lazy"><figcaption>image-20240720211002113</figcaption></figure><p>示例代码：</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">package</span><span style="color:#D8DEE9FF;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">import</span><span style="color:#ECEFF4;"> (</span></span>
<span class="line"><span style="color:#ECEFF4;">	&quot;</span><span style="color:#A3BE8C;">fmt</span><span style="color:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="color:#ECEFF4;">	&quot;</span><span style="color:#A3BE8C;">os</span><span style="color:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="color:#ECEFF4;">	&quot;</span><span style="color:#A3BE8C;">bufio</span><span style="color:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="color:#ECEFF4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#88C0D0;"> main</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9;">	fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Println</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">请输入一个字符串：</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9;">	reader</span><span style="color:#81A1C1;"> :=</span><span style="color:#D8DEE9;"> bufio</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">NewReader</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">os</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">Stdin</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9;">	s1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> _</span><span style="color:#81A1C1;"> :=</span><span style="color:#D8DEE9;"> reader</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">ReadString</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">\\n</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9;">	fmt</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Println</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">读到的数据：</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> s1</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行效果：</p><figure><img src="https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407202110995.png" alt="image-20240720211011947" tabindex="0" loading="lazy"><figcaption>image-20240720211011947</figcaption></figure><h1 id="文件的操作" tabindex="-1"><a class="header-anchor" href="#文件的操作"><span>文件的操作</span></a></h1><h1 id="协程和管道" tabindex="-1"><a class="header-anchor" href="#协程和管道"><span>协程和管道</span></a></h1><h1 id="网络编程" tabindex="-1"><a class="header-anchor" href="#网络编程"><span>网络编程</span></a></h1><h1 id="反射" tabindex="-1"><a class="header-anchor" href="#反射"><span>反射</span></a></h1>`,177);function r(i,E){return p(),n("div",null,[c,a(" more "),t])}const F=s(o,[["render",r],["__file","go-语法基础.html.vue"]]),C=JSON.parse('{"path":"/note/go/go-%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80.html","title":"go语法基础","lang":"zh-CN","frontmatter":{"title":"go语法基础","cover":"/assets/images/cover1.jpg","icon":"file","order":3,"author":"HotMilk","date":"2024-07-15T00:00:00.000Z","category":["Go"],"tag":["go语法基础"],"description":"go-语法","head":[["meta",{"property":"og:url","content":"https://reniunai.github.io/note/go/go-%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80.html"}],["meta",{"property":"og:site_name","content":"热牛奶"}],["meta",{"property":"og:title","content":"go语法基础"}],["meta",{"property":"og:description","content":"go-语法"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://reniunai.github.io/assets/images/cover1.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-05T08:48:07.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://reniunai.github.io/assets/images/cover1.jpg"}],["meta",{"name":"twitter:image:alt","content":"go语法基础"}],["meta",{"property":"article:author","content":"HotMilk"}],["meta",{"property":"article:tag","content":"go语法基础"}],["meta",{"property":"article:published_time","content":"2024-07-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-05T08:48:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"go语法基础\\",\\"image\\":[\\"https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407201939493.png\\",\\"https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407201939719.png\\",\\"https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407202059193.png\\",\\"https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407202108620.png\\",\\"https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407202109136.png\\",\\"https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407202109140.png\\",\\"https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407202109787.png\\",\\"https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407202110189.png\\",\\"https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407202110995.png\\"],\\"datePublished\\":\\"2024-07-15T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-05T08:48:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"HotMilk\\"}]}"]]},"headers":[{"level":2,"title":"1.1 声明变量","slug":"_1-1-声明变量","link":"#_1-1-声明变量","children":[]},{"level":2,"title":"1.2 多变量声明","slug":"_1-2-多变量声明","link":"#_1-2-多变量声明","children":[]},{"level":2,"title":"1.3 注意事项","slug":"_1-3-注意事项","link":"#_1-3-注意事项","children":[]},{"level":2,"title":"常量constant","slug":"常量constant","link":"#常量constant","children":[{"level":3,"title":"1.1 常量声明","slug":"_1-1-常量声明","link":"#_1-1-常量声明","children":[]},{"level":3,"title":"1.2 iota","slug":"_1-2-iota","link":"#_1-2-iota","children":[]}]},{"level":2,"title":"2.1 if 语句","slug":"_2-1-if-语句","link":"#_2-1-if-语句","children":[]},{"level":2,"title":"2.2 if 变体","slug":"_2-2-if-变体","link":"#_2-2-if-变体","children":[]},{"level":2,"title":"2.3 switch语句：“开关”","slug":"_2-3-switch语句-开关","link":"#_2-3-switch语句-开关","children":[]},{"level":2,"title":"2.4 fallthrough","slug":"_2-4-fallthrough","link":"#_2-4-fallthrough","children":[]},{"level":2,"title":"2.5 Type Switch","slug":"_2-5-type-switch","link":"#_2-5-type-switch","children":[]},{"level":2,"title":"一、打印输出","slug":"一、打印输出","link":"#一、打印输出","children":[{"level":3,"title":"1.1 fmt包","slug":"_1-1-fmt包","link":"#_1-1-fmt包","children":[]},{"level":3,"title":"1.2 导入包","slug":"_1-2-导入包","link":"#_1-2-导入包","children":[]},{"level":3,"title":"1.3 常用打印函数","slug":"_1-3-常用打印函数","link":"#_1-3-常用打印函数","children":[]}]},{"level":2,"title":"二、键盘输入","slug":"二、键盘输入","link":"#二、键盘输入","children":[{"level":3,"title":"2.1 fmt包读取键盘输入","slug":"_2-1-fmt包读取键盘输入","link":"#_2-1-fmt包读取键盘输入","children":[]},{"level":3,"title":"2.2 bufio包读取","slug":"_2-2-bufio包读取","link":"#_2-2-bufio包读取","children":[]}]}],"git":{"createdTime":1722847687000,"updatedTime":1722847687000,"contributors":[{"name":"reniunai","email":"2843768@qq.com","commits":1}]},"readingTime":{"minutes":12.24,"words":3672},"filePathRelative":"note/go/go-语法基础.md","localizedDate":"2024年7月15日","excerpt":"<p>go-语法</p>\\n","autoDesc":true}');export{F as comp,C as data};
