import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,d as l,a,e,o}from"./app-Bv3jHGDE.js";const p={},r=a("p",null,"gin使用redis实现共同关注",-1),t=e(`<p>可以使用mysql结合redis记录用户关注的关系，mysql和redis各存一份，之后可以使用set集合求交集，方便求得两个用户之间的共同关注，避免在mysql频繁查询。redis是键值数据库，键为业务前缀：userid，值为set集合，把该用户所关注的用户id加入set集合，set集合重复会加不进去，这样就简单实现了不可重复关注。</p><p>先定义错误提示</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">//定义错误提示</span></span>
<span class="line"><span style="color:#81A1C1;">var</span><span style="color:#ECEFF4;"> (</span></span>
<span class="line"><span style="color:#D8DEE9;">	ErrFollowRepeated</span><span style="color:#81A1C1;">    =</span><span style="color:#D8DEE9;"> errors</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">New</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">查询不到信息</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9;">	ErrNotFollowRepeated</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> errors</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">New</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">不允许重复取消关注</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="dao层" tabindex="-1"><a class="header-anchor" href="#dao层"><span>dao层</span></a></h1><h2 id="关注" tabindex="-1"><a class="header-anchor" href="#关注"><span>关注</span></a></h2><p>首先需要实现<strong>关注</strong>的方法，代码如下</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">//关注的方法，key的格式：前缀+用户id</span></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#88C0D0;"> FollowOn</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">userId</span><span style="color:#81A1C1;"> int64</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> followId</span><span style="color:#81A1C1;"> int64</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> error</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">	//1.生成Key</span></span>
<span class="line"><span style="color:#D8DEE9;">	followkey</span><span style="color:#81A1C1;"> :=</span><span style="color:#88C0D0;"> getRedisKey</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">KeyFollowSetPF</span><span style="color:#81A1C1;"> +</span><span style="color:#D8DEE9;"> strconv</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Itoa</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">int</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">userId</span><span style="color:#ECEFF4;">)))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">	//2.关注，把被关注的id加入该用户的set集合。</span></span>
<span class="line"><span style="color:#D8DEE9;">	_</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> :=</span><span style="color:#D8DEE9;"> client</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">SAdd</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">followkey</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> followId</span><span style="color:#ECEFF4;">).</span><span style="color:#88C0D0;">Result</span><span style="color:#ECEFF4;">()</span></span>
<span class="line"><span style="color:#81A1C1;">	if</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> !=</span><span style="color:#81A1C1;"> nil</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">		return</span><span style="color:#D8DEE9;"> err</span></span>
<span class="line"><span style="color:#ECEFF4;">	}</span></span>
<span class="line"><span style="color:#81A1C1;">	return</span><span style="color:#81A1C1;"> nil</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="取关" tabindex="-1"><a class="header-anchor" href="#取关"><span>取关</span></a></h2><p>需要实现<strong>取关</strong>方法，代码如下</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">func</span><span style="color:#88C0D0;"> FollowOff</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">userId</span><span style="color:#81A1C1;"> int64</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> followId</span><span style="color:#81A1C1;"> int64</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> error</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">	//1.生成Key</span></span>
<span class="line"><span style="color:#D8DEE9;">	followkey</span><span style="color:#81A1C1;"> :=</span><span style="color:#88C0D0;"> getRedisKey</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">KeyFollowSetPF</span><span style="color:#81A1C1;"> +</span><span style="color:#D8DEE9;"> strconv</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Itoa</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">int</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">userId</span><span style="color:#ECEFF4;">)))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">	// 2.取关，删除set中元素</span></span>
<span class="line"><span style="color:#D8DEE9;">	_</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> :=</span><span style="color:#D8DEE9;"> client</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">SRem</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">followkey</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> followId</span><span style="color:#ECEFF4;">).</span><span style="color:#88C0D0;">Result</span><span style="color:#ECEFF4;">()</span></span>
<span class="line"><span style="color:#81A1C1;">	if</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> !=</span><span style="color:#81A1C1;"> nil</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">		return</span><span style="color:#D8DEE9;"> err</span></span>
<span class="line"><span style="color:#ECEFF4;">	}</span></span>
<span class="line"><span style="color:#81A1C1;">	return</span><span style="color:#81A1C1;"> nil</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="判断是否关注" tabindex="-1"><a class="header-anchor" href="#判断是否关注"><span>判断是否关注</span></a></h2><p>判断是否关注</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#88C0D0;"> GetIsFollow</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">p</span><span style="color:#81A1C1;"> *</span><span style="color:#D8DEE9FF;">models</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9FF;">Follow</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> bool</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">	//1.生成Key</span></span>
<span class="line"><span style="color:#D8DEE9;">	followkey</span><span style="color:#81A1C1;"> :=</span><span style="color:#88C0D0;"> getRedisKey</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">KeyFollowSetPF</span><span style="color:#81A1C1;"> +</span><span style="color:#D8DEE9;"> strconv</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Itoa</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">int</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">p</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">UserID</span><span style="color:#ECEFF4;">)))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9;">	isMember</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> _</span><span style="color:#81A1C1;"> :=</span><span style="color:#D8DEE9;"> client</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">SIsMember</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">followkey</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> p</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">FollowUserID</span><span style="color:#ECEFF4;">).</span><span style="color:#88C0D0;">Result</span><span style="color:#ECEFF4;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">	return</span><span style="color:#D8DEE9;"> isMember</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="两用户求交集" tabindex="-1"><a class="header-anchor" href="#两用户求交集"><span>两用户求交集</span></a></h2><p>两用户求交集</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"></span>
<span class="line"><span style="color:#616E88;">// GetFollowCommons 获取共同关注，求交集</span></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#88C0D0;"> GetFollowCommons</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">userId</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> commonId</span><span style="color:#81A1C1;"> int64</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> *</span><span style="color:#ECEFF4;">[]</span><span style="color:#81A1C1;">string</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">	// 1. 生成Key</span></span>
<span class="line"><span style="color:#D8DEE9;">	followkey1</span><span style="color:#81A1C1;"> :=</span><span style="color:#88C0D0;"> getRedisKey</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">KeyFollowSetPF</span><span style="color:#81A1C1;"> +</span><span style="color:#D8DEE9;"> strconv</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Itoa</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">int</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">userId</span><span style="color:#ECEFF4;">)))</span></span>
<span class="line"><span style="color:#D8DEE9;">	followkey2</span><span style="color:#81A1C1;"> :=</span><span style="color:#88C0D0;"> getRedisKey</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">KeyFollowSetPF</span><span style="color:#81A1C1;"> +</span><span style="color:#D8DEE9;"> strconv</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Itoa</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">int</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">commonId</span><span style="color:#ECEFF4;">)))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">	// 2. 使用Redis客户端执行SInter操作</span></span>
<span class="line"><span style="color:#D8DEE9;">	result</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> :=</span><span style="color:#D8DEE9;"> client</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">SInter</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">followkey1</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> followkey2</span><span style="color:#ECEFF4;">).</span><span style="color:#88C0D0;">Result</span><span style="color:#ECEFF4;">()</span></span>
<span class="line"><span style="color:#81A1C1;">	if</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> !=</span><span style="color:#81A1C1;"> nil</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">		// 3. 如果发生错误，返回nil</span></span>
<span class="line"><span style="color:#81A1C1;">		return</span><span style="color:#81A1C1;"> nil</span></span>
<span class="line"><span style="color:#ECEFF4;">	}</span></span>
<span class="line"><span style="color:#616E88;">	// 5. 返回users切片</span></span>
<span class="line"><span style="color:#81A1C1;">	return</span><span style="color:#81A1C1;"> &amp;</span><span style="color:#D8DEE9;">result</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="业务层" tabindex="-1"><a class="header-anchor" href="#业务层"><span>业务层</span></a></h1><h2 id="关注-1" tabindex="-1"><a class="header-anchor" href="#关注-1"><span>关注</span></a></h2><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">var</span><span style="color:#ECEFF4;"> (</span></span>
<span class="line"><span style="color:#D8DEE9;">	ErrFollowRepeated</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> errors</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">New</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">重复关注</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// InsertFollow 关注</span></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#88C0D0;"> InsertFollow</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">p</span><span style="color:#81A1C1;"> *</span><span style="color:#D8DEE9FF;">models</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9FF;">Follow</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">err</span><span style="color:#81A1C1;"> error</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">	//先查询一下是否已关注</span></span>
<span class="line"><span style="color:#D8DEE9;">	isFollow</span><span style="color:#81A1C1;"> :=</span><span style="color:#D8DEE9;"> redis</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">GetIsFollow</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">p</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">	if</span><span style="color:#D8DEE9;"> isFollow</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">		return</span><span style="color:#D8DEE9;"> ErrFollowRepeated</span></span>
<span class="line"><span style="color:#ECEFF4;">	}</span></span>
<span class="line"><span style="color:#616E88;">	// 1. 保存到数据库</span></span>
<span class="line"><span style="color:#D8DEE9;">	err</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> mysql</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">InsertFollow</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">p</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#81A1C1;">	if</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> !=</span><span style="color:#81A1C1;"> nil</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">		return</span><span style="color:#D8DEE9;"> err</span></span>
<span class="line"><span style="color:#ECEFF4;">	}</span></span>
<span class="line"><span style="color:#616E88;">	// err = redis.CreatePost(p.ID, p.CommunityID)</span></span>
<span class="line"><span style="color:#616E88;">	//2.redis中插入set数据</span></span>
<span class="line"><span style="color:#616E88;">	//同时把数据放进redis，把关注用户的id，放入redis的set集合 sadd userId followerUserId</span></span>
<span class="line"><span style="color:#81A1C1;">	if</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> :=</span><span style="color:#D8DEE9;"> redis</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">FollowOn</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">p</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">UserID</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> p</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">FollowUserID</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> !=</span><span style="color:#81A1C1;"> nil</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">		return</span><span style="color:#D8DEE9;"> err</span></span>
<span class="line"><span style="color:#ECEFF4;">	}</span></span>
<span class="line"><span style="color:#81A1C1;">	return</span></span>
<span class="line"><span style="color:#616E88;">	// 3. 返回</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="取关-1" tabindex="-1"><a class="header-anchor" href="#取关-1"><span>取关</span></a></h2><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// DeleteFollow 取消关注</span></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#88C0D0;"> DeleteFollow</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">p</span><span style="color:#81A1C1;"> *</span><span style="color:#D8DEE9FF;">models</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9FF;">Follow</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">err</span><span style="color:#81A1C1;"> error</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">	// 1. 保存到数据库</span></span>
<span class="line"><span style="color:#D8DEE9;">	err</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> mysql</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">DeleteFollow</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">p</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#81A1C1;">	if</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> !=</span><span style="color:#81A1C1;"> nil</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">		return</span><span style="color:#D8DEE9;"> err</span></span>
<span class="line"><span style="color:#ECEFF4;">	}</span></span>
<span class="line"><span style="color:#616E88;">	//取关则删除数据</span></span>
<span class="line"><span style="color:#616E88;">	//同时把数据放进redis，把关注用户的id，放入redis的set集合 sadd userId followerUserId</span></span>
<span class="line"><span style="color:#D8DEE9;">	redis</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">FollowOff</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">p</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">UserID</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> p</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">FollowUserID</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#81A1C1;">	return</span></span>
<span class="line"><span style="color:#616E88;">	// 3. 返回</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="获取共同关注" tabindex="-1"><a class="header-anchor" href="#获取共同关注"><span>获取共同关注</span></a></h2><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// GetFollowCommons 获取共同关注</span></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#88C0D0;"> GetFollowCommons</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">userId</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> commonId</span><span style="color:#81A1C1;"> int64</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> []</span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;">models</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9FF;">User </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">	//3.redis中求set集合求交集</span></span>
<span class="line"><span style="color:#D8DEE9;">	result</span><span style="color:#81A1C1;"> :=</span><span style="color:#D8DEE9;"> redis</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">GetFollowCommons</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">userId</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> commonId</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">	// 4. 解析结果，并转换为models.User类型的切片</span></span>
<span class="line"><span style="color:#616E88;">    // 这里是分配了一个指针数组，并把这个指针数组返回。</span></span>
<span class="line"><span style="color:#D8DEE9;">	users</span><span style="color:#81A1C1;"> :=</span><span style="color:#88C0D0;"> make</span><span style="color:#ECEFF4;">([]</span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;">models</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9FF;">User</span><span style="color:#ECEFF4;">,</span><span style="color:#88C0D0;"> len</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9;">result</span><span style="color:#ECEFF4;">))</span></span>
<span class="line"><span style="color:#81A1C1;">	for</span><span style="color:#D8DEE9;"> i</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> id</span><span style="color:#81A1C1;"> :=</span><span style="color:#81A1C1;"> range</span><span style="color:#81A1C1;"> *</span><span style="color:#D8DEE9;">result</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">		// 这里需要根据id查询对应的用户信息，并填充到users切片</span></span>
<span class="line"><span style="color:#616E88;">		// 假设有一个函数getUserByID，可以查询到对应的用户信息</span></span>
<span class="line"><span style="color:#D8DEE9;">		idInt</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> :=</span><span style="color:#D8DEE9;"> strconv</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">ParseInt</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">id</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 10</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 64</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#81A1C1;">		if</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> !=</span><span style="color:#81A1C1;"> nil</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">			break</span></span>
<span class="line"><span style="color:#ECEFF4;">		}</span></span>
<span class="line"><span style="color:#D8DEE9FF;">        </span></span>
<span class="line"><span style="color:#D8DEE9;">		user</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> :=</span><span style="color:#D8DEE9;"> mysql</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">GetUserById</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">idInt</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#81A1C1;">		if</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> !=</span><span style="color:#81A1C1;"> nil</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">			break</span></span>
<span class="line"><span style="color:#ECEFF4;">		}</span></span>
<span class="line"><span style="color:#616E88;">        //users[i]是指针，*users[i]是获取该地址的值。(*user)是因为其也是一个指针。</span></span>
<span class="line"><span style="color:#ECEFF4;">		(</span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9;">users</span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9;">i</span><span style="color:#ECEFF4;">]).</span><span style="color:#D8DEE9;">UserID</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> (</span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9;">user</span><span style="color:#ECEFF4;">).</span><span style="color:#D8DEE9;">UserID</span></span>
<span class="line"><span style="color:#ECEFF4;">	}</span></span>
<span class="line"><span style="color:#81A1C1;">	return</span><span style="color:#D8DEE9;"> users</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23);function c(i,E){return o(),n("div",null,[r,l(" more "),t])}const F=s(p,[["render",c],["__file","gin使用redis实现共同关注.html.vue"]]),C=JSON.parse('{"path":"/note/go/gin%E4%BD%BF%E7%94%A8redis%E5%AE%9E%E7%8E%B0%E5%85%B1%E5%90%8C%E5%85%B3%E6%B3%A8.html","title":"gin使用redis实现共同关注","lang":"zh-CN","frontmatter":{"title":"gin使用redis实现共同关注","cover":"/assets/images/cover1.jpg","icon":"file","order":3,"author":"HotMilk","date":"2024-07-15T00:00:00.000Z","category":["Go"],"tag":["gin使用redis实现共同关注","redis"],"description":"gin使用redis实现共同关注","head":[["meta",{"property":"og:url","content":"https://reniunai.github.io/note/go/gin%E4%BD%BF%E7%94%A8redis%E5%AE%9E%E7%8E%B0%E5%85%B1%E5%90%8C%E5%85%B3%E6%B3%A8.html"}],["meta",{"property":"og:site_name","content":"热牛奶"}],["meta",{"property":"og:title","content":"gin使用redis实现共同关注"}],["meta",{"property":"og:description","content":"gin使用redis实现共同关注"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://reniunai.github.io/assets/images/cover1.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-05T08:48:07.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://reniunai.github.io/assets/images/cover1.jpg"}],["meta",{"name":"twitter:image:alt","content":"gin使用redis实现共同关注"}],["meta",{"property":"article:author","content":"HotMilk"}],["meta",{"property":"article:tag","content":"gin使用redis实现共同关注"}],["meta",{"property":"article:tag","content":"redis"}],["meta",{"property":"article:published_time","content":"2024-07-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-05T08:48:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"gin使用redis实现共同关注\\",\\"image\\":[\\"https://reniunai.github.io/assets/images/cover1.jpg\\"],\\"datePublished\\":\\"2024-07-15T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-05T08:48:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"HotMilk\\"}]}"]]},"headers":[{"level":2,"title":"关注","slug":"关注","link":"#关注","children":[]},{"level":2,"title":"取关","slug":"取关","link":"#取关","children":[]},{"level":2,"title":"判断是否关注","slug":"判断是否关注","link":"#判断是否关注","children":[]},{"level":2,"title":"两用户求交集","slug":"两用户求交集","link":"#两用户求交集","children":[]},{"level":2,"title":"关注","slug":"关注-1","link":"#关注-1","children":[]},{"level":2,"title":"取关","slug":"取关-1","link":"#取关-1","children":[]},{"level":2,"title":"获取共同关注","slug":"获取共同关注","link":"#获取共同关注","children":[]}],"git":{"createdTime":1722847687000,"updatedTime":1722847687000,"contributors":[{"name":"reniunai","email":"2843768@qq.com","commits":1}]},"readingTime":{"minutes":3.17,"words":950},"filePathRelative":"note/go/gin使用redis实现共同关注.md","localizedDate":"2024年7月15日","excerpt":"<p>gin使用redis实现共同关注</p>\\n","autoDesc":true}');export{F as comp,C as data};
