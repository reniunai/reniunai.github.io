import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,d as a,a as l,e,o as p}from"./app-zamys2Ga.js";const o={},t=l("p",null,"go-简单使用redis，gin使用redis实现简单关注推送",-1),r=e(`<h1 id="feed流" tabindex="-1"><a class="header-anchor" href="#feed流"><span>Feed流</span></a></h1><p>当我们关注了用户后，这个用户发了动态，那么我们应该把这些数据推送给用户，这个需求，其实我们又把他叫做Feed流，关注推送也叫做Feed流，直译为投喂。为用户持续的提供“沉浸式”的体验，通过无限下拉刷新获取新的信息。</p><p>对于传统的模式的内容解锁：我们是需要用户去通过搜索引擎或者是其他的方式去解锁想要看的内容</p><figure><img src="https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407210009090.png" alt="image-20240721000935042" tabindex="0" loading="lazy"><figcaption>image-20240721000935042</figcaption></figure><p>对于新型的Feed流的的效果：不需要我们用户再去推送信息，而是系统分析用户到底想要什么，然后直接把内容推送给用户，从而使用户能够更加的节约时间，不用主动去寻找。</p><figure><img src="https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407210009705.png" alt="image-20240721000951669" tabindex="0" loading="lazy"><figcaption>image-20240721000951669</figcaption></figure><p>Feed流产品有两种常见模式： Timeline：不做内容筛选，简单的按照内容发布时间排序，常用于好友或关注。例如朋友圈</p><ul><li>优点：信息全面，不会有缺失。并且实现也相对简单</li><li>缺点：信息噪音较多，用户不一定感兴趣，内容获取效率低</li></ul><p>智能排序：利用智能算法屏蔽掉违规的、用户不感兴趣的内容。推送用户感兴趣信息来吸引用户</p><ul><li>优点：投喂用户感兴趣信息，用户粘度很高，容易沉迷</li><li>缺点：如果算法不精准，可能起到反作用 这里是关注后推送，是基于关注的好友来做Feed流，因此采用Timeline的模式。该模式的实现方案有三种：</li></ul><p>我们本次针对好友的操作，采用的就是Timeline的方式，只需要拿到我们关注用户的信息，然后按照时间排序即可</p><p>，因此采用Timeline的模式。该模式的实现方案有三种：</p><ul><li>拉模式</li><li>推模式</li><li>推拉结合</li></ul><p><strong>拉模式</strong>：也叫做读扩散</p><p>该模式的核心含义就是：当张三和李四和王五发了消息后，都会保存在自己的邮箱中，假设赵六要读取信息，那么他会从读取他自己的收件箱，此时系统会从他关注的人群中，把他关注人的信息全部都进行拉取，然后在进行排序</p><p>优点：比较节约空间，因为赵六在读信息时，并没有重复读取，而且读取完之后可以把他的收件箱进行清楚。</p><p>缺点：比较延迟，当用户读取数据时才去关注的人里边去读取数据，假设用户关注了大量的用户，那么此时就会拉取海量的内容，对服务器压力巨大。</p><p><strong>推模式</strong>：也叫做写扩散。</p><p>推模式是没有写邮箱的，当张三写了一个内容，此时会主动的把张三写的内容发送到他的粉丝收件箱中去，假设此时李四再来读取，就不用再去临时拉取了</p><p>优点：时效快，不用临时拉取</p><p>缺点：内存压力大，假设一个大V写信息，很多人关注他， 就会写很多分数据到粉丝那边去</p><p><strong>推拉结合模式</strong>：也叫做读写混合，兼具推和拉两种模式的优点。</p><p>推拉模式是一个折中的方案，站在发件人这一段，如果是个普通的人，那么我们采用写扩散的方式，直接把数据写入到他的粉丝中去，因为普通的人他的粉丝关注量比较小，所以这样做没有压力，如果是大V，那么他是直接将数据先写入到一份到发件箱里边去，然后再直接写一份到活跃粉丝收件箱里边去，现在站在收件人这端来看，如果是活跃粉丝，那么大V和普通的人发的都会直接写入到自己收件箱里边来，而如果是普通的粉丝，由于他们上线不是很频繁，所以等他们上线时，再从发件箱里边去拉信息。</p><h1 id="传统分页与在feed流中的分页" tabindex="-1"><a class="header-anchor" href="#传统分页与在feed流中的分页"><span>传统分页与在feed流中的分页</span></a></h1><p>Feed流中的数据会不断更新，所以数据的角标也在变化，因此不能采用传统的分页模式。</p><p>传统了分页在feed流是不适用的，因为我们的数据会随时发生变化</p><p>假设在t1 时刻，我们去读取第一页，此时page = 1 ，size = 5 ，那么我们拿到的就是10~6 这几条记录，假设现在t2时候又发布了一条记录，此时t3 时刻，我们来读取第二页，读取第二页传入的参数是page=2 ，size=5 ，那么此时读取到的第二页实际上是从6 开始，然后是6~2 ，那么我们就读取到了重复的数据，所以feed流的分页，不能采用原始方案来做。</p><figure><img src="https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407210312912.png" alt="image-20240721031244857" tabindex="0" loading="lazy"><figcaption>image-20240721031244857</figcaption></figure><h1 id="feed流的滚动分页" tabindex="-1"><a class="header-anchor" href="#feed流的滚动分页"><span>Feed流的滚动分页</span></a></h1><p>我们需要记录每次操作的最后一条，然后从这个位置开始去读取数据</p><p>举个例子：我们从t1时刻开始，拿第一页数据，拿到了10~6，然后记录下当前最后一次拿取的记录，就是6，t2时刻发布了新的记录，此时这个11放到最顶上，但是不会影响我们之前记录的6，此时t3时刻来拿第二页，第二页这个时候拿数据，还是从6后一点的5去拿，就拿到了5-1的记录。我们这个地方可以采用sortedSet来做，可以进行范围查询，并且还可以记录当前获取数据时间戳最小值，就可以实现滚动分页了</p><figure><img src="https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407210313957.png" alt="image-20240721031348904" tabindex="0" loading="lazy"><figcaption>image-20240721031348904</figcaption></figure><h1 id="好友关注-实现分页查询收邮箱" tabindex="-1"><a class="header-anchor" href="#好友关注-实现分页查询收邮箱"><span>好友关注-实现分页查询收邮箱</span></a></h1><p>需求：在个人主页的“关注”卡片中，查询并展示推送的Blog信息：</p><p>具体操作如下：</p><p>1、每次查询完成后，我们要分析出查询出数据的最小时间戳，这个值会作为下一次查询的条件</p><p>2、我们需要找到与上一次查询相同的查询个数作为偏移量，下次查询时，跳过这些查询过的数据，拿到我们需要的数据</p><p>综上：我们的请求参数中就需要携带 lastId：上一次查询的最小时间戳 和偏移量这两个参数。</p><p>这两个参数第一次会由前端来指定，以后的查询就根据后台结果作为条件，再次传递到后台。</p><p>timeline：时间线，按时间浏览。</p><p>推模式：推送到粉丝的信箱。</p><p>拉模式：当点入主页时，才从该博主的信息拉取。</p><p>如果粉丝量很多，退模式</p><p>流程：</p><p>创建帖子的同时，获取该作者的粉丝，往粉丝的信箱推送，粉丝点击<strong>我的关注</strong>时，去信箱中取。</p><p>所以有 <strong>获取该作者粉丝</strong>，<strong>往信箱进行发送</strong>，<strong>从信箱中取消息</strong>，三个函数。</p><h1 id="dao层" tabindex="-1"><a class="header-anchor" href="#dao层"><span>dao层</span></a></h1><h2 id="往信箱进行发送" tabindex="-1"><a class="header-anchor" href="#往信箱进行发送"><span>// 往信箱进行发送</span></a></h2><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// 往信箱进行发送</span></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#88C0D0;"> SendFeed</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">data</span><span style="color:#ECEFF4;"> []</span><span style="color:#81A1C1;">*int64</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> postId</span><span style="color:#81A1C1;"> int64</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> error</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">	//一次发送，减少rrt次数</span></span>
<span class="line"><span style="color:#D8DEE9;">	pipeline</span><span style="color:#81A1C1;"> :=</span><span style="color:#D8DEE9;"> client</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">TxPipeline</span><span style="color:#ECEFF4;">()</span></span>
<span class="line"><span style="color:#81A1C1;">	for</span><span style="color:#D8DEE9;"> _</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> v</span><span style="color:#81A1C1;"> :=</span><span style="color:#81A1C1;"> range</span><span style="color:#D8DEE9;"> data</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">		//1.生成Key</span></span>
<span class="line"><span style="color:#D8DEE9;">		key</span><span style="color:#81A1C1;"> :=</span><span style="color:#88C0D0;"> getRedisKey</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">KeySendFeedSetPF</span><span style="color:#81A1C1;"> +</span><span style="color:#D8DEE9;"> strconv</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Itoa</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">int</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9;">v</span><span style="color:#ECEFF4;">)))</span></span>
<span class="line"><span style="color:#616E88;">		// 2. 使用Redis客户端执行SInter操作</span></span>
<span class="line"><span style="color:#616E88;">		//key:postId,2000-0-0</span></span>
<span class="line"><span style="color:#D8DEE9;">		pipeline</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">ZAdd</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">key</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> redis</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9FF;">Z</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9;">			Score</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;">  float64</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">time</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Now</span><span style="color:#ECEFF4;">().</span><span style="color:#88C0D0;">Unix</span><span style="color:#ECEFF4;">()),</span><span style="color:#616E88;"> // 时间戳</span></span>
<span class="line"><span style="color:#D8DEE9;">			Member</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9;"> postId</span><span style="color:#ECEFF4;">,</span><span style="color:#616E88;">                     //帖子ID</span></span>
<span class="line"><span style="color:#ECEFF4;">		})</span></span>
<span class="line"><span style="color:#ECEFF4;">	}</span></span>
<span class="line"><span style="color:#D8DEE9;">	_</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> :=</span><span style="color:#D8DEE9;"> pipeline</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Exec</span><span style="color:#ECEFF4;">()</span></span>
<span class="line"><span style="color:#81A1C1;">	return</span><span style="color:#D8DEE9;"> err</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="从信箱中取消息" tabindex="-1"><a class="header-anchor" href="#从信箱中取消息"><span>// 从信箱中取消息</span></a></h2><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// 从信箱中取消息</span></span>
<span class="line"><span style="color:#616E88;">//函数解释：</span></span>
<span class="line"><span style="color:#616E88;">//userId int64,用户信箱</span></span>
<span class="line"><span style="color:#616E88;">//lastIdStr,最后查询的帖子id</span></span>
<span class="line"><span style="color:#616E88;">//offSetStr，偏移量</span></span>
<span class="line"><span style="color:#616E88;">//(idData []int64,返回查询到的结果 </span></span>
<span class="line"><span style="color:#616E88;">//newOffSet int64,新的偏移量 </span></span>
<span class="line"><span style="color:#616E88;">//minTime float64,本次查询的最小时间戳，作用和lastIdStr一样</span></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#88C0D0;"> SelectMail</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">userId</span><span style="color:#81A1C1;"> int64</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> lastIdStr</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> offSetStr</span><span style="color:#81A1C1;"> string</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">idData</span><span style="color:#ECEFF4;"> []</span><span style="color:#81A1C1;">int64</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> newOffSet</span><span style="color:#81A1C1;"> int64</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> minTime</span><span style="color:#81A1C1;"> float64</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> error</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">	//1.查询该用户收件箱 ZREVRANGEBYSCORE key Max Min LIMIT offset count</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">	// ZREVRANGE 按分数从大到小的顺序查询指定数量的元素</span></span>
<span class="line"><span style="color:#616E88;">	// lastId, err := strconv.ParseInt(lastIdStr, 10, 64)</span></span>
<span class="line"><span style="color:#616E88;">	// if err != nil {</span></span>
<span class="line"><span style="color:#616E88;">	// 	return nil, err</span></span>
<span class="line"><span style="color:#616E88;">	// }</span></span>
<span class="line"><span style="color:#D8DEE9;">	offSet</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> :=</span><span style="color:#D8DEE9;"> strconv</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">ParseInt</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">offSetStr</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 10</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 64</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#81A1C1;">	if</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> !=</span><span style="color:#81A1C1;"> nil</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">		return</span><span style="color:#81A1C1;"> nil</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 0</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 0</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> err</span></span>
<span class="line"><span style="color:#ECEFF4;">	}</span></span>
<span class="line"><span style="color:#616E88;">    //ZRevRangeByScoreWithScores</span></span>
<span class="line"><span style="color:#616E88;">    //</span></span>
<span class="line"><span style="color:#D8DEE9;">	cmd</span><span style="color:#81A1C1;"> :=</span><span style="color:#D8DEE9;"> client</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">ZRevRangeByScoreWithScores</span><span style="color:#ECEFF4;">(</span><span style="color:#88C0D0;">getRedisKey</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">KeySendFeedSetPF</span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9;">strconv</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Itoa</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">int</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">userId</span><span style="color:#ECEFF4;">))),</span><span style="color:#D8DEE9FF;"> redis</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9FF;">ZRangeBy</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9;">		Min</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;">    &quot;</span><span style="color:#A3BE8C;">0</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#D8DEE9;">		Max</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9;">    lastIdStr</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#D8DEE9;">		Offset</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9;"> offSet</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#D8DEE9;">		Count</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;">  3</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#ECEFF4;">	})</span></span>
<span class="line"><span style="color:#D8DEE9;">	minTime</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 0</span></span>
<span class="line"><span style="color:#D8DEE9;">	idData</span><span style="color:#81A1C1;"> =</span><span style="color:#88C0D0;"> make</span><span style="color:#ECEFF4;">([]</span><span style="color:#81A1C1;">int64</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 0</span><span style="color:#ECEFF4;">,</span><span style="color:#88C0D0;"> len</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">cmd</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Val</span><span style="color:#ECEFF4;">()))</span></span>
<span class="line"><span style="color:#81A1C1;">	for</span><span style="color:#D8DEE9;"> _</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> v</span><span style="color:#81A1C1;"> :=</span><span style="color:#81A1C1;"> range</span><span style="color:#D8DEE9;"> cmd</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Val</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9;">		idInt64</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> :=</span><span style="color:#D8DEE9;"> strconv</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">ParseInt</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">v</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">Member</span><span style="color:#ECEFF4;">.(</span><span style="color:#81A1C1;">string</span><span style="color:#ECEFF4;">),</span><span style="color:#B48EAD;"> 10</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 64</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#81A1C1;">		if</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> !=</span><span style="color:#81A1C1;"> nil</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">			// 处理错误</span></span>
<span class="line"><span style="color:#81A1C1;">			continue</span><span style="color:#616E88;"> // 或者返回错误，或者执行其他逻辑</span></span>
<span class="line"><span style="color:#ECEFF4;">		}</span></span>
<span class="line"><span style="color:#D8DEE9;">		idData</span><span style="color:#81A1C1;"> =</span><span style="color:#88C0D0;"> append</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">idData</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> idInt64</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#616E88;">		// 4.2.获取分数(时间戳）</span></span>
<span class="line"><span style="color:#D8DEE9;">		time</span><span style="color:#81A1C1;"> :=</span><span style="color:#D8DEE9;"> v</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">Score</span></span>
<span class="line"><span style="color:#616E88;">        //如果有重复，需要计算偏移量，处理分数相同的情况</span></span>
<span class="line"><span style="color:#81A1C1;">		if</span><span style="color:#D8DEE9;"> time</span><span style="color:#81A1C1;"> ==</span><span style="color:#D8DEE9;"> minTime</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9;">			newOffSet</span><span style="color:#81A1C1;">++</span></span>
<span class="line"><span style="color:#ECEFF4;">		}</span><span style="color:#81A1C1;"> else</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">            //如果分数没有重复，偏移量就是1</span></span>
<span class="line"><span style="color:#D8DEE9;">			minTime</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> time</span></span>
<span class="line"><span style="color:#D8DEE9;">			newOffSet</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 1</span></span>
<span class="line"><span style="color:#ECEFF4;">		}</span></span>
<span class="line"><span style="color:#ECEFF4;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">	return</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="selectfans-查询用户的粉丝" tabindex="-1"><a class="header-anchor" href="#selectfans-查询用户的粉丝"><span>// Selectfans 查询用户的粉丝</span></a></h2><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// Selectfans 查询用户的粉丝，返回</span></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#88C0D0;"> Selectfans</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">id</span><span style="color:#81A1C1;"> int64</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">fans</span><span style="color:#ECEFF4;"> []</span><span style="color:#81A1C1;">*int64</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> error</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9;">	sqlStr</span><span style="color:#81A1C1;"> :=</span></span>
<span class="line"><span style="color:#ECEFF4;">		\`</span><span style="color:#A3BE8C;">select user_id from follow where follow_user_id = ? group by user_id</span><span style="color:#ECEFF4;">\`</span></span>
<span class="line"><span style="color:#D8DEE9;">	fans</span><span style="color:#81A1C1;"> =</span><span style="color:#88C0D0;"> make</span><span style="color:#ECEFF4;">([]</span><span style="color:#81A1C1;">*int64</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 0</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 2</span><span style="color:#ECEFF4;">)</span><span style="color:#616E88;"> // 不要写成make([]*models.Post, 2)</span></span>
<span class="line"><span style="color:#D8DEE9;">	err</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> db</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Select</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">&amp;</span><span style="color:#D8DEE9;">fans</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> sqlStr</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> id</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#81A1C1;">	return</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="业务层" tabindex="-1"><a class="header-anchor" href="#业务层"><span>业务层</span></a></h1><h2 id="从信箱中取消息-1" tabindex="-1"><a class="header-anchor" href="#从信箱中取消息-1"><span>// 从信箱中取消息</span></a></h2><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// 从信箱中取消息</span></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#88C0D0;"> SelctMail</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">userId</span><span style="color:#81A1C1;"> int64</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> lastIdStr</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> offSetStr</span><span style="color:#81A1C1;"> string</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">idData</span><span style="color:#ECEFF4;"> []</span><span style="color:#81A1C1;">int64</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> newOffSet</span><span style="color:#81A1C1;"> int64</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> minTime</span><span style="color:#81A1C1;"> float64</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> error</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">	//1.查询该用户收件箱 ZREVRANGEBYSCORE key Max Min LIMIT offset count</span></span>
<span class="line"><span style="color:#81A1C1;">	return</span><span style="color:#D8DEE9;"> redis</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">SelectMail</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">userId</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> lastIdStr</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> offSetStr</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="selectfans-根据id查询粉丝" tabindex="-1"><a class="header-anchor" href="#selectfans-根据id查询粉丝"><span>// SelectFans 根据ID查询粉丝</span></a></h2><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// SelectFans 根据ID查询粉丝</span></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#88C0D0;"> SelectFans</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">id</span><span style="color:#81A1C1;"> int64</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> ([]</span><span style="color:#81A1C1;">*int64</span><span style="color:#ECEFF4;">,</span><span style="color:#81A1C1;"> error</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">	return</span><span style="color:#D8DEE9;"> mysql</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Selectfans</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">id</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="控制层" tabindex="-1"><a class="header-anchor" href="#控制层"><span>控制层</span></a></h1><h2 id="createposthandler-创建帖子的处理函数" tabindex="-1"><a class="header-anchor" href="#createposthandler-创建帖子的处理函数"><span>// CreatePostHandler 创建帖子的处理函数</span></a></h2><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// CreatePostHandler 创建帖子的处理函数</span></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#88C0D0;"> CreatePostHandler</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">c</span><span style="color:#81A1C1;"> *</span><span style="color:#D8DEE9FF;">gin</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9FF;">Context</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">	// 1. 获取参数及参数的校验</span></span>
<span class="line"><span style="color:#616E88;">	//c.ShouldBindJSON()  // validator --&gt; binding tag</span></span>
<span class="line"><span style="color:#D8DEE9;">	p</span><span style="color:#81A1C1;"> :=</span><span style="color:#88C0D0;"> new</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">models</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9FF;">Post</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#81A1C1;">	if</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> :=</span><span style="color:#D8DEE9;"> c</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">ShouldBindJSON</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">p</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> !=</span><span style="color:#81A1C1;"> nil</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9;">		zap</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">L</span><span style="color:#ECEFF4;">().</span><span style="color:#88C0D0;">Debug</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">c.ShouldBindJSON(p) error</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> zap</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Any</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">err</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> err</span><span style="color:#ECEFF4;">))</span></span>
<span class="line"><span style="color:#D8DEE9;">		zap</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">L</span><span style="color:#ECEFF4;">().</span><span style="color:#88C0D0;">Error</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">create post with invalid param</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#88C0D0;">		ResponseError</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">c</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> CodeInvalidParam</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#81A1C1;">		return</span></span>
<span class="line"><span style="color:#ECEFF4;">	}</span></span>
<span class="line"><span style="color:#616E88;">	// 2.  从 c 取到当前发请求的用户的ID</span></span>
<span class="line"><span style="color:#D8DEE9;">	userID</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> :=</span><span style="color:#88C0D0;"> getCurrentUserID</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">c</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#81A1C1;">	if</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> !=</span><span style="color:#81A1C1;"> nil</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#88C0D0;">		ResponseError</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">c</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> CodeNeedLogin</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#81A1C1;">		return</span></span>
<span class="line"><span style="color:#ECEFF4;">	}</span></span>
<span class="line"><span style="color:#D8DEE9;">	p</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">AuthorID</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> userID</span></span>
<span class="line"><span style="color:#616E88;">	// 3. 创建帖子</span></span>
<span class="line"><span style="color:#81A1C1;">	if</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> :=</span><span style="color:#D8DEE9;"> logic</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">CreatePost</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">p</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> !=</span><span style="color:#81A1C1;"> nil</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9;">		zap</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">L</span><span style="color:#ECEFF4;">().</span><span style="color:#88C0D0;">Error</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">logic.CreatePost(p) failed</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> zap</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Error</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">err</span><span style="color:#ECEFF4;">))</span></span>
<span class="line"><span style="color:#88C0D0;">		ResponseError</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">c</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> CodeServerBusy</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#81A1C1;">		return</span></span>
<span class="line"><span style="color:#ECEFF4;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">	// 4. 获取该用户的粉丝集合，从mysql获取，或者从redis中获取都可以，然后推送粉丝</span></span>
<span class="line"><span style="color:#D8DEE9;">	data</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> :=</span><span style="color:#D8DEE9;"> logic</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">SelectFans</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">p</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">AuthorID</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#81A1C1;">	if</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> !=</span><span style="color:#81A1C1;"> nil</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9;">		zap</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">L</span><span style="color:#ECEFF4;">().</span><span style="color:#88C0D0;">Error</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">logic.SelectFans(p); failed</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> zap</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Error</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">err</span><span style="color:#ECEFF4;">))</span></span>
<span class="line"><span style="color:#88C0D0;">		ResponseError</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">c</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> CodeServerBusy</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#81A1C1;">		return</span></span>
<span class="line"><span style="color:#ECEFF4;">	}</span></span>
<span class="line"><span style="color:#616E88;">	// 5. 根据粉丝集合，进行推送</span></span>
<span class="line"><span style="color:#81A1C1;">	if</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> :=</span><span style="color:#D8DEE9;"> logic</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">SendFeed</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">data</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> p</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">ID</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> !=</span><span style="color:#81A1C1;"> nil</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9;">		zap</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">L</span><span style="color:#ECEFF4;">().</span><span style="color:#88C0D0;">Error</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">logic.SendFeed() failed</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> zap</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Error</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">err</span><span style="color:#ECEFF4;">))</span></span>
<span class="line"><span style="color:#88C0D0;">		ResponseError</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">c</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> CodeServerBusy</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#81A1C1;">		return</span></span>
<span class="line"><span style="color:#ECEFF4;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">	// 6. 返回响应</span></span>
<span class="line"><span style="color:#88C0D0;">	ResponseSuccess</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">c</span><span style="color:#ECEFF4;">,</span><span style="color:#81A1C1;"> nil</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查询分页数据" tabindex="-1"><a class="header-anchor" href="#查询分页数据"><span>// 查询分页数据</span></a></h2><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// 查询分页数据</span></span>
<span class="line"><span style="color:#81A1C1;">func</span><span style="color:#88C0D0;"> GetPostFollowHandler</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">c</span><span style="color:#81A1C1;"> *</span><span style="color:#D8DEE9FF;">gin</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9FF;">Context</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">	//1.获取当前用户id</span></span>
<span class="line"><span style="color:#D8DEE9;">	userId</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> :=</span><span style="color:#88C0D0;"> getCurrentUserID</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">c</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#81A1C1;">	if</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> !=</span><span style="color:#81A1C1;"> nil</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#88C0D0;">		ResponseError</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">c</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> CodeNeedLogin</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#81A1C1;">		return</span></span>
<span class="line"><span style="color:#ECEFF4;">	}</span></span>
<span class="line"><span style="color:#616E88;">	//v1.GET(&quot;/post/of/follow/:lastid/:offset&quot;, controller.GetPostFollowHandler)</span></span>
<span class="line"><span style="color:#D8DEE9;">	lastIdStr</span><span style="color:#81A1C1;"> :=</span><span style="color:#D8DEE9;"> c</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Param</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">lastid</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9;">	offSetStr</span><span style="color:#81A1C1;"> :=</span><span style="color:#D8DEE9;"> c</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Param</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">offset</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#616E88;">	// 2.查询该用户收件箱 ZREVRANGEBYSCORE key Max Min LIMIT offset count</span></span>
<span class="line"><span style="color:#D8DEE9;">	idData</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> newOffSet</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> minTime</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> :=</span><span style="color:#D8DEE9;"> logic</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">SelctMail</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">userId</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> lastIdStr</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> offSetStr</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#81A1C1;">	if</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> !=</span><span style="color:#81A1C1;"> nil</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#88C0D0;">		ResponseError</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">c</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> CodeInvalidParam</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#81A1C1;">		return</span></span>
<span class="line"><span style="color:#ECEFF4;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">	//3.根据id查询post</span></span>
<span class="line"><span style="color:#D8DEE9;">	data</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> :=</span><span style="color:#D8DEE9;"> logic</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">GetFollowPostListByIds</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">&amp;</span><span style="color:#D8DEE9;">idData</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> newOffSet</span><span style="color:#ECEFF4;">,</span><span style="color:#81A1C1;"> int64</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">minTime</span><span style="color:#ECEFF4;">))</span></span>
<span class="line"><span style="color:#81A1C1;">	if</span><span style="color:#D8DEE9;"> err</span><span style="color:#81A1C1;"> !=</span><span style="color:#81A1C1;"> nil</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#88C0D0;">		ResponseError</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">c</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> CodeInvalidParam</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#81A1C1;">		return</span></span>
<span class="line"><span style="color:#ECEFF4;">	}</span></span>
<span class="line"><span style="color:#616E88;">	// 6.封装并返回</span></span>
<span class="line"><span style="color:#88C0D0;">	ResponseSuccess</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">c</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> data</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,63);function c(i,E){return p(),n("div",null,[t,a(" more "),r])}const F=s(o,[["render",c],["__file","gin使用redis实现简单关注推送.html.vue"]]),C=JSON.parse('{"path":"/note/go/gin%E4%BD%BF%E7%94%A8redis%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E5%85%B3%E6%B3%A8%E6%8E%A8%E9%80%81.html","title":"gin使用redis实现简单关注推送","lang":"zh-CN","frontmatter":{"title":"gin使用redis实现简单关注推送","cover":"/assets/images/cover1.jpg","icon":"file","order":3,"author":"HotMilk","date":"2024-07-15T00:00:00.000Z","category":["Go"],"tag":["gin使用redis","redis","关注推送"],"description":"go-简单使用redis，gin使用redis实现简单关注推送","head":[["meta",{"property":"og:url","content":"https://reniunai.github.io/note/go/gin%E4%BD%BF%E7%94%A8redis%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E5%85%B3%E6%B3%A8%E6%8E%A8%E9%80%81.html"}],["meta",{"property":"og:site_name","content":"热牛奶"}],["meta",{"property":"og:title","content":"gin使用redis实现简单关注推送"}],["meta",{"property":"og:description","content":"go-简单使用redis，gin使用redis实现简单关注推送"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://reniunai.github.io/assets/images/cover1.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-05T08:48:07.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://reniunai.github.io/assets/images/cover1.jpg"}],["meta",{"name":"twitter:image:alt","content":"gin使用redis实现简单关注推送"}],["meta",{"property":"article:author","content":"HotMilk"}],["meta",{"property":"article:tag","content":"gin使用redis"}],["meta",{"property":"article:tag","content":"redis"}],["meta",{"property":"article:tag","content":"关注推送"}],["meta",{"property":"article:published_time","content":"2024-07-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-05T08:48:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"gin使用redis实现简单关注推送\\",\\"image\\":[\\"https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407210009090.png\\",\\"https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407210009705.png\\",\\"https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407210312912.png\\",\\"https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407210313957.png\\"],\\"datePublished\\":\\"2024-07-15T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-05T08:48:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"HotMilk\\"}]}"]]},"headers":[{"level":2,"title":"// 往信箱进行发送","slug":"往信箱进行发送","link":"#往信箱进行发送","children":[]},{"level":2,"title":"// 从信箱中取消息","slug":"从信箱中取消息","link":"#从信箱中取消息","children":[]},{"level":2,"title":"// Selectfans 查询用户的粉丝","slug":"selectfans-查询用户的粉丝","link":"#selectfans-查询用户的粉丝","children":[]},{"level":2,"title":"// 从信箱中取消息","slug":"从信箱中取消息-1","link":"#从信箱中取消息-1","children":[]},{"level":2,"title":"// SelectFans 根据ID查询粉丝","slug":"selectfans-根据id查询粉丝","link":"#selectfans-根据id查询粉丝","children":[]},{"level":2,"title":"// CreatePostHandler 创建帖子的处理函数","slug":"createposthandler-创建帖子的处理函数","link":"#createposthandler-创建帖子的处理函数","children":[]},{"level":2,"title":"// 查询分页数据","slug":"查询分页数据","link":"#查询分页数据","children":[]}],"git":{"createdTime":1722847687000,"updatedTime":1722847687000,"contributors":[{"name":"reniunai","email":"2843768@qq.com","commits":1}]},"readingTime":{"minutes":9.41,"words":2822},"filePathRelative":"note/go/gin使用redis实现简单关注推送.md","localizedDate":"2024年7月15日","excerpt":"<p>go-简单使用redis，gin使用redis实现简单关注推送</p>\\n","autoDesc":true}');export{F as comp,C as data};
