import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,d as s,a as n,e as i,o as a}from"./app-CfDCVS1X.js";const o={},c=n("p",null,"计算机网络",-1),p=i('<p>网络模型</p><figure><img src="https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407180125054.png" alt="image-20240718012528965" tabindex="0" loading="lazy"><figcaption>image-20240718012528965</figcaption></figure><figure><img src="https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407180124300.png" alt="image-20240718012410220" tabindex="0" loading="lazy"><figcaption>image-20240718012410220</figcaption></figure><figure><img src="https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407180121220.png" alt="image-20240718012117157" tabindex="0" loading="lazy"><figcaption>image-20240718012117157</figcaption></figure><figure><img src="https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407180121889.png" alt="image-20240718012155747" tabindex="0" loading="lazy"><figcaption>image-20240718012155747</figcaption></figure><figure><img src="https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407180122528.png" alt="image-20240718012231414" tabindex="0" loading="lazy"><figcaption>image-20240718012231414</figcaption></figure><figure><img src="https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407180122176.png" alt="image-20240718012257046" tabindex="0" loading="lazy"><figcaption>image-20240718012257046</figcaption></figure><figure><img src="https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407180123906.png" alt="image-20240718012318793" tabindex="0" loading="lazy"><figcaption>image-20240718012318793</figcaption></figure><figure><img src="https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407180142433.png" alt="image-20240718014234276" tabindex="0" loading="lazy"><figcaption>image-20240718014234276</figcaption></figure><h1 id="tcp" tabindex="-1"><a class="header-anchor" href="#tcp"><span>TCP</span></a></h1><h2 id="tcp最主要的特点" tabindex="-1"><a class="header-anchor" href="#tcp最主要的特点"><span>TCP最主要的特点</span></a></h2><p>(1）TCP是<strong>面向连接的运输层协议</strong>。这就是说，应用程序在使用TCP协议之前，必须先建立TCP连接。在传送数据完毕后，必须释放已经建立的TCP连接。也就是说，应用进程之间的通信好像在“打电话”：通话前要先拨号建立连接，通话结束后要挂机释放连接。</p><p>(2）每一条TCP连接只能有两个<strong>端点(endpoint)</strong>，每一条TCP连接只能是点对点的（一对一）。</p><p>(3）TCP提供<strong>可靠交付</strong>的服务。通过TCP连接传送的数据，无差错、不丢失、不重复，并且按序到达。</p><p>(4）TCP提供<strong>全双工通信</strong>。TCP允许通信双方的应用进程在任何时候都能发送数据。TCP连接的两端都设有发送缓存和接收缓存，用来临时存放双向通信的数据。在发送时，应用程序在把数据传送给TCP的缓存后，就可以做自己的事，而TCP在合适的时候把数据发送出去。在接收时，TCP把收到的数据放入缓存，上层的应用进程在合适的时候读取缓存中的数据。</p><p>(5）<strong>面向字节流。<strong>TCP中的</strong>“流”（stream)<strong>指的是</strong>流入到进程或从进程流出的字节序列。</strong>“面向字节流”的含义是：虽然应用程序和TCP的交互是一次一个数据块（大小不等），但TCP把应用程序交下来的数据仅仅看成是一连串的<strong>无结构的字节流</strong>。TCP并不知道所传送的字节流的含义。TCP不保证接收方应用程序所收到的数据块和发送方应用程序所发出的数据块具有对应大小的关系（例如，发送方应用程序交给发送方的TCP共10个数据块，但接收方的TCP可能只用了4个数据块就把收到的字节流交付上层的应用程序）。但接收方应用程序收到的字节流必须和发送方应用程序发出的字节流完全一样。当然，接收方的应用程序必须有能力识别收到的字节流，把它还原成有意义的应用层数据。</p><h2 id="什么是套接字-tcp的连接" tabindex="-1"><a class="header-anchor" href="#什么是套接字-tcp的连接"><span>什么是套接字 - TCP的连接</span></a></h2><p>​ 前面已经讲过，每一条TCP连接有两个端点。那么，TCP连接的端点是什么呢？不是主机，不是主机的IP地址，不是应用进程，也不是运输层的协议端口。TCP连接的端点叫做套接字(socket)或插口。根据RFC793的定义：端口号<strong>拼接到(concatenatedwith）IP</strong>地址即构成了套接字。因此，套接字的表示方法是在点分十进制的 <strong>IP</strong> 地址后面写上端口号，中间用冒号或逗号隔开。例如，若IP地址是192.3.4.5而端口号是80，那么得到的套接字就是(192.3.4.5:80)。总之，我们有 ​ <strong>套接字socket=(IP地址：端口号)</strong> (5-1) 每一条TCP连接唯一地被通信两端的两个端点（即两个套接字）所确定。即： TCP连接 ::= (socket1, socket2) ={ ( IP1 : port1 ) , ( IP2 : port2 ) } (5-2)</p><p>​ 这里 <strong>IP1</strong> 和 <strong>IP2</strong> 分别是两个端点主机的IP地址，而 port1 和 port2 分别是两个端点主机中的端口号。TCP连接的两个套接字就是 socket1 和 socket2 。可见套接字 socket 是个很抽象的概念。 ​ 总之，TCP连接就是由协议软件所提供的一种抽象。虽然有时为了方便，我们也可以说，在一个应用进程和另一个应用进程之间建立了一条TCP连接，但一定要记住：<strong>TCP连****接的端点是个很抽象的套接字，即（IP地址：端口号）</strong>。也还应记住：同一个IP地址可以有多个不同的TCP连接，而同一个端口号也可以出现在多个不同的TCP连接中。 ​ 请注意，socket这个名词有时容易使人把一些概念弄混淆，因为随着互联网的不断发展以及网络技术的进步，<strong>同一个名词socket却可表示多种不同的意思</strong>。例如： (1）允许应用程序访问连网协议的<strong>应用编程接口API</strong>（ApplicationProgrammingInterface)，即运输层和应用层之间的一种接口，称为socketAPI，并简称为socket。 (2）在socketAPI中使用的一个<strong>函数名</strong>也叫做socket。 (3）调用socket函数的<strong>端点</strong>称为socket，如“创建一个数据报socket”。 (4）调用socket函数时，其<strong>返回值</strong>称为socket描述符，可简称为socket。 (5）在操作系统内核中连网协议的Berkeley实现，称为socket实现。 上面的这些socket的意思都和本章所引用的RFC793定义的socket（指端口号拼接到IP地址）不同。请读者加以注意。</p><h2 id="tcp报文段的首部格式" tabindex="-1"><a class="header-anchor" href="#tcp报文段的首部格式"><span>TCP报文段的首部格式</span></a></h2><p>TCP虽然是面向字节流的，但TCP传送的数据单元却是报文段。一个TCP报文段分为首部和数据两部分，而TCP的全部功能都体现在它首部中各字段的作用。因此，只有弄清TCP首部各字段的作用才能掌握TCP的工作原理。下面讨论TCP报文段的首部格式。TCP报文段首部的前20个字节是固定的，后面有4n字节是根据需要而增加的选项（n是整数）。因此TCP首部的最小长度是20字节。</p><ul><li><p>【端口号】：端口号，TCP的分用功能通过端口实现的；</p></li><li><p>【序号】：在一个TCP连接中传送的字节流中的每一个字节都按顺序编号。首部中的序号字段值则指的是本报文段所发送的数据的第一个字节的序号。在连接建立时由计算机计算出的初始值，通过 SYN 包传给对端主机，每发送一次新的数据包，就<strong>累加</strong>一次该序列号的大小。<strong>用来解决网络包乱序问题</strong>；</p></li><li><p>【确认号】：占4字节，是期望收到对方下一个报文段的第一个数据字节的序号。例如，B正确收到了A发送过来的一个报文段，其序号字段值是501，而数据长度是200字节(序号501~700)，这表明B正确收到了A发送的到序号700为止的数据。因此，B期望收到A的下一个数据序号是701，于是B在发送给A的确认报文段中把确认号置为701.请注意，现在的确认号不是501，也不是700，而是701.。总之，应当记住：</p><p>若确认号=N,则表明：到序号N-1为止的所有数据都已正确收到。</p></li><li><p>【数据偏移】：4位，表示该首部有多大，单位是32个位字（即4个字节）。4位最大是1111，即15。15*4字节=60字节，首部最多是60字节。</p></li><li><p>【标志字段】：</p></li><li><ul><li>【ACK】：用以指示确认字段中的值是有效的，即该报文段包括一个对已被成功接收的报文段的确认；</li><li>【RST】：用以指示连接的强制拆除，当接收到错误连接时会发送RST位置为1的报文；</li><li>【SYN】：用以指示连接的建立，当SYN = 1 而 ACK = 0 时，表明这是一个连接请求报文段。对方若同意建立连接，则应在响应的报文段中使SYN=1和ACK=1。因此，SYN置为1就表示这是一个连接请求或连接接受报文。</li><li>【FIN】：用以指示连接的终止，该位为1的报文表示希望断开连接；</li></ul></li><li><p>【窗口】：2个字节。窗口值在[0,2的16次方-1]。窗口值表示发送本报文段的一方的接受窗口。表示最多可以接受多少个字节。之所以有这个限制，是因为数据缓存空间是有限的。这个值是动态变化的。</p></li></ul><h2 id="tcp的可靠传输的实现" tabindex="-1"><a class="header-anchor" href="#tcp的可靠传输的实现"><span>TCP的可靠传输的实现</span></a></h2><h3 id="滑动窗口" tabindex="-1"><a class="header-anchor" href="#滑动窗口"><span>滑动窗口</span></a></h3><p>TCP的滑动窗口是以字节为单位的。为了便于说明滑动窗口的工作原理，我们故意把后 面图5-15至图5-18中的字节编号都取得很小。现假定A收到了B发来的确认报文段，其中 窗口是20字节，而确认号是31（这表明B期望收到的下一个序号是31，而序号30为止的数 据已经收到了）。根据这两个数据，A就构造出自己的发送窗口。</p><figure><img src="https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407181439194.png" alt="image-20240718143913151" tabindex="0" loading="lazy"><figcaption>image-20240718143913151</figcaption></figure><h3 id="超时重传" tabindex="-1"><a class="header-anchor" href="#超时重传"><span>超时重传</span></a></h3><p>上面已经讲到，TCP的发送方在规定的时间内没有收到确认就要重传已发送的报文段。这种重传的概念是很简单的，但重传时间的选择却是TCP最复杂的问题之一。</p><h3 id="流量控制" tabindex="-1"><a class="header-anchor" href="#流量控制"><span>流量控制</span></a></h3><h3 id="拥塞控制" tabindex="-1"><a class="header-anchor" href="#拥塞控制"><span>拥塞控制</span></a></h3><p>流量控制、拥塞控制、超时重传、滑动窗口</p><h1 id="udp" tabindex="-1"><a class="header-anchor" href="#udp"><span>UDP</span></a></h1><p>三次握手（三报文握手，即一次握手交换3个报文）</p><p>四次挥手</p><p>TCP套接字编程</p><p>HTTP</p><p>GET/POST</p><p>HTTPS加密过程</p><p>HTTP、HTTPS对比</p><h1 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h1><p>计算机网络（第7版）-谢希仁</p>',41);function r(l,g){return a(),e("div",null,[c,s(" more "),p])}const d=t(o,[["render",r],["__file","计算机网络.html.vue"]]),P=JSON.parse('{"path":"/note/computernetwork/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C.html","title":"计算机网络","lang":"zh-CN","frontmatter":{"title":"计算机网络","cover":"/assets/images/cover1.jpg","icon":"file","order":3,"author":"HotMilk","date":"2024-07-15T00:00:00.000Z","category":["计算机网络"],"tag":["计算机网络"],"description":"计算机网络","head":[["meta",{"property":"og:url","content":"https://reniunai.github.io/note/computernetwork/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C.html"}],["meta",{"property":"og:site_name","content":"热牛奶"}],["meta",{"property":"og:title","content":"计算机网络"}],["meta",{"property":"og:description","content":"计算机网络"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://reniunai.github.io/assets/images/cover1.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-05T08:48:07.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://reniunai.github.io/assets/images/cover1.jpg"}],["meta",{"name":"twitter:image:alt","content":"计算机网络"}],["meta",{"property":"article:author","content":"HotMilk"}],["meta",{"property":"article:tag","content":"计算机网络"}],["meta",{"property":"article:published_time","content":"2024-07-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-05T08:48:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"计算机网络\\",\\"image\\":[\\"https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407180125054.png\\",\\"https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407180124300.png\\",\\"https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407180121220.png\\",\\"https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407180121889.png\\",\\"https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407180122528.png\\",\\"https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407180122176.png\\",\\"https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407180123906.png\\",\\"https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407180142433.png\\",\\"https://hotmilk-pic.oss-cn-shenzhen.aliyuncs.com/assets/202407181439194.png\\"],\\"datePublished\\":\\"2024-07-15T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-05T08:48:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"HotMilk\\"}]}"]]},"headers":[{"level":2,"title":"TCP最主要的特点","slug":"tcp最主要的特点","link":"#tcp最主要的特点","children":[]},{"level":2,"title":"什么是套接字 - TCP的连接","slug":"什么是套接字-tcp的连接","link":"#什么是套接字-tcp的连接","children":[]},{"level":2,"title":"TCP报文段的首部格式","slug":"tcp报文段的首部格式","link":"#tcp报文段的首部格式","children":[]},{"level":2,"title":"TCP的可靠传输的实现","slug":"tcp的可靠传输的实现","link":"#tcp的可靠传输的实现","children":[{"level":3,"title":"滑动窗口","slug":"滑动窗口","link":"#滑动窗口","children":[]},{"level":3,"title":"超时重传","slug":"超时重传","link":"#超时重传","children":[]},{"level":3,"title":"流量控制","slug":"流量控制","link":"#流量控制","children":[]},{"level":3,"title":"拥塞控制","slug":"拥塞控制","link":"#拥塞控制","children":[]}]}],"git":{"createdTime":1722847687000,"updatedTime":1722847687000,"contributors":[{"name":"reniunai","email":"2843768@qq.com","commits":1}]},"readingTime":{"minutes":8.5,"words":2551},"filePathRelative":"note/computernetwork/计算机网络.md","localizedDate":"2024年7月15日","excerpt":"<p>计算机网络</p>\\n","autoDesc":true}');export{d as comp,P as data};
